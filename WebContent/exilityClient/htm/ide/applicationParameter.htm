<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    <meta http-equiv="Cache-Control" content="no-cache" />
    <link rel="stylesheet" href="../../css/home/ezDefault.css" type="text/css" />
    <script type="text/javascript" src="../../js/api/exilityLoader.js"></script>
    
<script type="text/javascript" src="applicationParameter.metadata.js" ></script> 
<script type="text/javascript" src="../../js/ide/applicationParameter.js" ></script> 
<link rel="stylesheet" type="text/css" href="../../css/ide/applicationParameter.css" />
</head>
<body onload="exilPageLoad();" style="display: none;" onunload="exilPageUnload();"
    onscroll="adjustFrameHeightToBodyHeight();">
    <form id="form1" onsubmit="if(event.preventDefault) event.preventDefault(); else event.returnValue= false; return false;" action="" accept-charset="UTF-8">
    <div class="page">
        <div id="pageTitle">Application Parameters</div>
        
<div class="topButtons" id="topButtons" class="topButtons" > <div id="reload" title="Reload" onclick="P2.act(this, 'reload', 'reload', event);" style="cursor:pointer;"></div><div id="close" title="Close" onclick="P2.act(this, 'close', 'close', event);" style="cursor:pointer;"></div><div id="save" title="Save" onclick="P2.act(this, 'save', 'save', event);" style="cursor:pointer;display:none;"></div> </div><div class="expandedfieldset" id="canNotSaveTop" >
<div class="displayPanel" id="canNotSave" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="canNotSaveFieldsTable" >
<col id="canNotSaveCol1" /><col id="canNotSaveCol2" /><tr> <td colspan="2" ><div >NOTE : Save option is disabled for you. Only PL can make changes to Application Parameters.</div></td></tr> </table>  </div></div><div class="expandedfieldset" id="allParametersTop" >
<div class="tabpanel" id="allParameters"  >
 <div class="tabnav" id="allParametersTabNav" ><div id="projectSetupTab"  class="activetablabel"  tabcontainername="allParameters" onclick="P2.tabClicked(this, 'projectSetupTabsDiv', 'allParameters');"  >Project Setup</div><div id="dbDetailsTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="allParameters" onclick="P2.tabClicked(this, 'dbDetailsTabsDiv', 'allParameters');"  >Database</div><div id="pageDetailsTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="allParameters" onclick="P2.tabClicked(this, 'pageDetailsTabsDiv', 'allParameters');"  >Page Generator</div><div id="deploymentTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="allParameters" onclick="P2.tabClicked(this, 'deploymentTabsDiv', 'allParameters');"  >Deployment</div></div><div class="tabs" id = "allParametersTabs"><div id="projectSetupTabsDiv"><div class="expandedfieldset" id="projectSetupTop" >
<div class="displayPanel" id="projectSetup" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="projectSetupFieldsTable" >
<col id="projectSetupCol1" /><col id="projectSetupCol2" /><col id="projectSetupCol3" /><tr>
<td class="labelCell" id="uniqueNamesAcrossGroupsLabelCell" ><div class="label" id="uniqueNamesAcrossGroupsLabel"  >Data elements unique across groups?</div></td><td class="fieldCell" id="uniqueNamesAcrossGroupsFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="uniqueNamesAcrossGroups"  onchange="P2.fieldChanged(this, 'uniqueNamesAcrossGroups');" onfocus="P2.fieldFocussed(this, 'uniqueNamesAcrossGroups');" onblur="P2.inputFocusOut(this, 'uniqueNamesAcrossGroups');" autocomplete="off" /></td><td><div class="fieldHelp" id="uniqueNamesAcrossGroupsHelp">Object oriented approach assumes context of an object for every attribute, and hence people get used to attributes like name, rather than customerName. Exility tried to accomodate both convention by allowing just name as attribute, but insisting on qualifying that always with group. This has not gone well, and hence we just do not allow that any more.</div></td></tr><tr>
<td class="labelCell" id="dataElementSeparatorLabelCell" ><div class="label" id="dataElementSeparatorLabel"  >Data element separator</div></td><td class="fieldCell" id="dataElementSeparatorFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dataElementSeparator"  onchange="P2.fieldChanged(this, 'dataElementSeparator');" onfocus="P2.fieldFocussed(this, 'dataElementSeparator');" onblur="P2.inputFocusOut(this, 'dataElementSeparator');" autocomplete="off" /></td><td><div class="fieldHelp" id="dataElementSeparatorHelp">If we choose to have names not unique across groups, we use groupName+this separator+element name as qualified name.</div></td></tr><tr>
<td class="labelCell" id="globalServerDataNamesLabelCell" ><div class="label" id="globalServerDataNamesLabel"  >Global fields</div></td><td class="fieldCell" id="globalServerDataNamesFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="globalServerDataNames"  onchange="P2.fieldChanged(this, 'globalServerDataNames');" onfocus="P2.fieldFocussed(this, 'globalServerDataNames');" onblur="P2.inputFocusOut(this, 'globalServerDataNames');" autocomplete="off" /></td><td><div class="fieldHelp" id="globalServerDataNamesHelp">fields that are required across all services for a logged in session. These fields are cached into session after a login service. This means that the login service should get values for these fields. This approach is to be used instead of setCookies attribute.</div></td></tr><tr>
<td class="labelCell" id="loginServiceIdLabelCell" ><div class="label" id="loginServiceIdLabel"  >Login service name</div></td><td class="fieldCell" id="loginServiceIdFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="loginServiceId"  onchange="P2.fieldChanged(this, 'loginServiceId');" onfocus="P2.fieldFocussed(this, 'loginServiceId');" onblur="P2.inputFocusOut(this, 'loginServiceId');" autocomplete="off" /></td><td><div class="fieldHelp" id="loginServiceIdHelp">server needs to allow logi service to go thru without authentication</div></td></tr><tr>
<td class="labelCell" id="logoutServiceIdLabelCell" ><div class="label" id="logoutServiceIdLabel"  >Logout service name</div></td><td class="fieldCell" id="logoutServiceIdFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="logoutServiceId"  onchange="P2.fieldChanged(this, 'logoutServiceId');" onfocus="P2.fieldFocussed(this, 'logoutServiceId');" onblur="P2.inputFocusOut(this, 'logoutServiceId');" autocomplete="off" /></td><td><div class="fieldHelp" id="logoutServiceIdHelp">server will remove all session related cached data once this servise is executed.</div></td></tr><tr>
<td class="labelCell" id="loggedInUserFieldNameLabelCell" ><div class="label" id="loggedInUserFieldNameLabel"  >Fieldname for loggedin user</div></td><td class="fieldCell" id="loggedInUserFieldNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="loggedInUserFieldName"  onchange="P2.fieldChanged(this, 'loggedInUserFieldName');" onfocus="P2.fieldFocussed(this, 'loggedInUserFieldName');" onblur="P2.inputFocusOut(this, 'loggedInUserFieldName');" autocomplete="off" /></td><td><div class="fieldHelp" id="loggedInUserFieldNameHelp">this is autmatically used as the value for logging and other contexts</div></td></tr><tr>
<td class="labelCell" id="loggedInUserDataTypeIsIntegerLabelCell" ><div class="label" id="loggedInUserDataTypeIsIntegerLabel"  >User id is integer</div></td><td class="fieldCell" id="loggedInUserDataTypeIsIntegerFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="loggedInUserDataTypeIsInteger"  onchange="P2.fieldChanged(this, 'loggedInUserDataTypeIsInteger');" onfocus="P2.fieldFocussed(this, 'loggedInUserDataTypeIsInteger');" onblur="P2.inputFocusOut(this, 'loggedInUserDataTypeIsInteger');" autocomplete="off" /></td><td><div class="fieldHelp" id="loggedInUserDataTypeIsIntegerHelp">Exility needs to handle userId and it assumes it to be text by default. Override it here. We intend to get this from data dictioanry in the future.</div></td></tr><tr>
<td class="labelCell" id="setCookiesLabelCell" ><div class="label" id="setCookiesLabel"  >Cookie names</div></td><td class="fieldCell" id="setCookiesFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="setCookies"  onchange="P2.fieldChanged(this, 'setCookies');" onfocus="P2.fieldFocussed(this, 'setCookies');" onblur="P2.inputFocusOut(this, 'setCookies');" autocomplete="off" /></td><td><div class="fieldHelp" id="setCookiesHelp">Should not be used. cookies are visible to clients and subject to misuse. Use global fields instead.</div></td></tr><tr>
<td class="labelCell" id="getCookiesLabelCell" ><div class="label" id="getCookiesLabel"  >Cookies to be extracted</div></td><td class="fieldCell" id="getCookiesFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="getCookies"  onchange="P2.fieldChanged(this, 'getCookies');" onfocus="P2.fieldFocussed(this, 'getCookies');" onblur="P2.inputFocusOut(this, 'getCookies');" autocomplete="off" /></td><td><div class="fieldHelp" id="getCookiesHelp">not used any more. cookies are subjetc to client side manipulation. use globalServerDataNames instead.</div>&nbsp;
<input type="hidden"  id="fileUploadMeans"  onchange="P2.fieldChanged(this, 'fileUploadMeans');"/></td></tr><tr>
<td class="labelCell" id="filePathLabelCell" ><div class="label" id="filePathLabel"  >Path for uploading files</div></td><td class="fieldCell" id="filePathFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="filePath"  onchange="P2.fieldChanged(this, 'filePath');" onfocus="P2.fieldFocussed(this, 'filePath');" onblur="P2.inputFocusOut(this, 'filePath');" autocomplete="off" /></td><td><div class="fieldHelp" id="filePathHelp">folder path from web root where all uploaded files are saved.</div></td></tr><tr>
<td class="labelCell" id="excelFilePathLabelCell" ><div class="label" id="excelFilePathLabel"  >Path for excel files</div></td><td class="fieldCell" id="excelFilePathFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="excelFilePath"  onchange="P2.fieldChanged(this, 'excelFilePath');" onfocus="P2.fieldFocussed(this, 'excelFilePath');" onblur="P2.inputFocusOut(this, 'excelFilePath');" autocomplete="off" /></td><td><div class="fieldHelp" id="excelFilePathHelp">folder path from web root where all xl files are saved.</div></td></tr><tr>
<td class="labelCell" id="ExcelTemplatesPathLabelCell" ><div class="label" id="ExcelTemplatesPathLabel"  >Path for excel templates</div></td><td class="fieldCell" id="ExcelTemplatesPathFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="ExcelTemplatesPath"  onchange="P2.fieldChanged(this, 'ExcelTemplatesPath');" onfocus="P2.fieldFocussed(this, 'ExcelTemplatesPath');" onblur="P2.inputFocusOut(this, 'ExcelTemplatesPath');" autocomplete="off" /></td><td><div class="fieldHelp" id="ExcelTemplatesPathHelp">folder path from web root where all xl report templates are available.</div></td></tr><tr>
<td class="labelCell" id="excelReportFileSavePathLabelCell" ><div class="label" id="excelReportFileSavePathLabel"  >Path for excel reports</div></td><td class="fieldCell" id="excelReportFileSavePathFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="excelReportFileSavePath"  onchange="P2.fieldChanged(this, 'excelReportFileSavePath');" onfocus="P2.fieldFocussed(this, 'excelReportFileSavePath');" onblur="P2.inputFocusOut(this, 'excelReportFileSavePath');" autocomplete="off" /></td><td><div class="fieldHelp" id="excelReportFileSavePathHelp">folder path from web root where all xl reports are to be saved.</div></td></tr><tr>
<td class="labelCell" id="cleanserNameLabelCell" ><div class="label" id="cleanserNameLabel"  >Cleanser name</div></td><td class="fieldCell" id="cleanserNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="cleanserName"  onchange="P2.fieldChanged(this, 'cleanserName');" onfocus="P2.fieldFocussed(this, 'cleanserName');" onblur="P2.inputFocusOut(this, 'cleanserName');" autocomplete="off" /></td><td><div class="fieldHelp" id="cleanserNameHelp">cleanser is the java code that is called before and after invoking every resource. </div></td></tr><tr>
<td class="labelCell" id="cleanserNameSpaceLabelCell" ><div class="label" id="cleanserNameSpaceLabel"  >Cleanser namespace</div></td><td class="fieldCell" id="cleanserNameSpaceFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="cleanserNameSpace"  onchange="P2.fieldChanged(this, 'cleanserNameSpace');" onfocus="P2.fieldFocussed(this, 'cleanserNameSpace');" onblur="P2.inputFocusOut(this, 'cleanserNameSpace');" autocomplete="off" /></td><td><div class="fieldHelp" id="cleanserNameSpaceHelp">cleanser is the java code that is called before and after invoking every resource. </div></td></tr><tr>
<td class="labelCell" id="cleanserAssemblyNameLabelCell" ><div class="label" id="cleanserAssemblyNameLabel"  >Cleanser assembly name</div></td><td class="fieldCell" id="cleanserAssemblyNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="cleanserAssemblyName"  onchange="P2.fieldChanged(this, 'cleanserAssemblyName');" onfocus="P2.fieldFocussed(this, 'cleanserAssemblyName');" onblur="P2.inputFocusOut(this, 'cleanserAssemblyName');" autocomplete="off" /></td><td><div class="fieldHelp" id="cleanserAssemblyNameHelp">cleanser is the java code that is called before and after invoking every resource. </div></td></tr> </table>  </div></div></div><div id="dbDetailsTabsDiv" style="display:none;"><div class="expandedfieldset" id="dbDetailsTop" >
<div class="displayPanel" id="dbDetails" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="dbDetailsFieldsTable" >
<col id="dbDetailsCol1" /><col id="dbDetailsCol2" /><col id="dbDetailsCol3" /><tr>
<td class="labelCell" id="dataSourceLabelCell" ><div class="label" id="dataSourceLabel"  >Datasource for db connection</div></td><td class="fieldCell" id="dataSourceFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dataSource"  onchange="P2.fieldChanged(this, 'dataSource');" onfocus="P2.fieldFocussed(this, 'dataSource');" onblur="P2.inputFocusOut(this, 'dataSource');" autocomplete="off" /></td><td><div class="fieldHelp" id="dataSourceHelp">preferred way of managing database connection, instead of connection string</div></td></tr><tr>
<td class="labelCell" id="dbDriverLabelCell" ><div class="label" id="dbDriverLabel"  >Database driver</div></td><td class="fieldCell" id="dbDriverFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dbDriver"  onchange="P2.fieldChanged(this, 'dbDriver');" onfocus="P2.fieldFocussed(this, 'dbDriver');" onblur="P2.inputFocusOut(this, 'dbDriver');" autocomplete="off" /></td><td><div class="fieldHelp" id="dbDriverHelp">like oracle, posgre, or sqlServer</div></td></tr><tr>
<td class="labelCell" id="connectionStringLabelCell" ><div class="label" id="connectionStringLabel"  >Database connection string</div></td><td class="fieldCell" id="connectionStringFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="connectionString"  onchange="P2.fieldChanged(this, 'connectionString');" onfocus="P2.fieldFocussed(this, 'connectionString');" onblur="P2.inputFocusOut(this, 'connectionString');" autocomplete="off" /></td><td><div class="fieldHelp" id="connectionStringHelp">discouraged. use data source instead.</div>&nbsp;
<input type="hidden"  id="commonPrimaryKeyColumnName"  onchange="P2.fieldChanged(this, 'commonPrimaryKeyColumnName');"/></td></tr><tr>
<td class="labelCell" id="commandTimeOutTimeLabelCell" ><div class="label" id="commandTimeOutTimeLabel"  >SQL command timeout</div></td><td class="fieldCell" id="commandTimeOutTimeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="commandTimeOutTime"  onchange="P2.fieldChanged(this, 'commandTimeOutTime');" onfocus="P2.fieldFocussed(this, 'commandTimeOutTime');" onblur="P2.inputFocusOut(this, 'commandTimeOutTime');" autocomplete="off" /></td><td><div class="fieldHelp" id="commandTimeOutTimeHelp">Use this to change the default time out set for the database instance. exility issues this commend to a connection session.</div></td></tr><tr>
<td class="labelCell" id="batchConnectionStringLabelCell" ><div class="label" id="batchConnectionStringLabel"  >Connection string for batch</div></td><td class="fieldCell" id="batchConnectionStringFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="batchConnectionString"  onchange="P2.fieldChanged(this, 'batchConnectionString');" onfocus="P2.fieldFocussed(this, 'batchConnectionString');" onblur="P2.inputFocusOut(this, 'batchConnectionString');" autocomplete="off" /></td><td><div class="fieldHelp" id="batchConnectionStringHelp">discouraged. use data source instead.</div></td></tr><tr>
<td class="labelCell" id="enableAuditForAllLabelCell" ><div class="label" id="enableAuditForAllLabel"  >Audit all tables?</div></td><td class="fieldCell" id="enableAuditForAllFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="enableAuditForAll"  onchange="P2.fieldChanged(this, 'enableAuditForAll');" onfocus="P2.fieldFocussed(this, 'enableAuditForAll');" onblur="P2.inputFocusOut(this, 'enableAuditForAll');" autocomplete="off" /></td><td><div class="fieldHelp" id="enableAuditForAllHelp">by default all database modifications using tabel utitlities will be logged to audit tables as well. Not desirable. You should be selective in writing audit trials using toBAudited attribute at the table level</div></td></tr><tr>
<td class="labelCell" id="auditdataSourceLabelCell" ><div class="label" id="auditdataSourceLabel"  >Datasource for audit</div></td><td class="fieldCell" id="auditdataSourceFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="auditdataSource"  onchange="P2.fieldChanged(this, 'auditdataSource');" onfocus="P2.fieldFocussed(this, 'auditdataSource');" onblur="P2.inputFocusOut(this, 'auditdataSource');" autocomplete="off" /></td><td><div class="fieldHelp" id="auditdataSourceHelp">preferred way of managing database connection, instead of connection string</div></td></tr><tr>
<td class="labelCell" id="isSeparateAuditSchemaLabelCell" ><div class="label" id="isSeparateAuditSchemaLabel"  >Separate schema for audit?</div></td><td class="fieldCell" id="isSeparateAuditSchemaFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="isSeparateAuditSchema"  onchange="P2.fieldChanged(this, 'isSeparateAuditSchema');" onfocus="P2.fieldFocussed(this, 'isSeparateAuditSchema');" onblur="P2.inputFocusOut(this, 'isSeparateAuditSchema');" autocomplete="off" /></td><td><div class="fieldHelp" id="isSeparateAuditSchemaHelp">It is a good practice to use separate schema for audit tables.</div></td></tr><tr>
<td class="labelCell" id="audittableSuffixLabelCell" ><div class="label" id="audittableSuffixLabel"  >Audit table suffix</div></td><td class="fieldCell" id="audittableSuffixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="audittableSuffix"  onchange="P2.fieldChanged(this, 'audittableSuffix');" onfocus="P2.fieldFocussed(this, 'audittableSuffix');" onblur="P2.inputFocusOut(this, 'audittableSuffix');" autocomplete="off" /></td><td><div class="fieldHelp" id="audittableSuffixHelp">suffix to be used to the table name to get the name of table that is used as audit table. example you may use customer_audit for customer, in which case suffux would be _audit</div></td></tr><tr>
<td class="labelCell" id="auditConnectionStringLabelCell" ><div class="label" id="auditConnectionStringLabel"  >Audit connection string</div></td><td class="fieldCell" id="auditConnectionStringFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="auditConnectionString"  onchange="P2.fieldChanged(this, 'auditConnectionString');" onfocus="P2.fieldFocussed(this, 'auditConnectionString');" onblur="P2.inputFocusOut(this, 'auditConnectionString');" autocomplete="off" /></td><td><div class="fieldHelp" id="auditConnectionStringHelp">not recommended. use data source instead.</div></td></tr><tr>
<td class="labelCell" id="rdbmsBeingUsedLabelCell" ><div class="label" id="rdbmsBeingUsedLabel"  >rdbms being used</div></td><td class="fieldCell" id="rdbmsBeingUsedFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="rdbmsBeingUsed"  onchange="P2.fieldChanged(this, 'rdbmsBeingUsed');" onfocus="P2.fieldFocussed(this, 'rdbmsBeingUsed');" onblur="P2.inputFocusOut(this, 'rdbmsBeingUsed');" autocomplete="off" /></td><td><div class="fieldHelp" id="rdbmsBeingUsedHelp">text</div></td></tr><tr> <td colspan="3" >
<input type="button" value="Reset following parameters for this rdbms " id="resetDefaults" onclick="P2.act(this, 'resetDefaults', 'resetDefaultFields', event);" style="cursor:pointer;" /><td>&nbsp;</td></td></tr><tr>
<td class="labelCell" id="systemDateFunctionLabelCell" ><div class="label" id="systemDateFunctionLabel"  >System date function</div></td><td class="fieldCell" id="systemDateFunctionFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="systemDateFunction"  onchange="P2.fieldChanged(this, 'systemDateFunction');" onfocus="P2.fieldFocussed(this, 'systemDateFunction');" onblur="P2.inputFocusOut(this, 'systemDateFunction');" autocomplete="off" /></td><td><div class="fieldHelp" id="systemDateFunctionHelp">function to be used to get system date in a sql. This is used by the database utility to get current date. In the future, we intend to populate this based on the selected rdbms system (like if postgre is used this should be set to CURRENT_DATE )</div></td></tr><tr>
<td class="labelCell" id="dateFormattingPrefixLabelCell" ><div class="label" id="dateFormattingPrefixLabel"  >Date formatting prefix</div></td><td class="fieldCell" id="dateFormattingPrefixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dateFormattingPrefix"  onchange="P2.fieldChanged(this, 'dateFormattingPrefix');" onfocus="P2.fieldFocussed(this, 'dateFormattingPrefix');" onblur="P2.inputFocusOut(this, 'dateFormattingPrefix');" autocomplete="off" /></td><td><div class="fieldHelp" id="dateFormattingPrefixHelp">How to format date constants. use prefix and postfix as per dbms being used. we intend to do this automatically in the future, ut as of now you should be carefu in setting this.</div></td></tr><tr>
<td class="labelCell" id="dateFormattingPostfixLabelCell" ><div class="label" id="dateFormattingPostfixLabel"  >Date formatting postfix</div></td><td class="fieldCell" id="dateFormattingPostfixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dateFormattingPostfix"  onchange="P2.fieldChanged(this, 'dateFormattingPostfix');" onfocus="P2.fieldFocussed(this, 'dateFormattingPostfix');" onblur="P2.inputFocusOut(this, 'dateFormattingPostfix');" autocomplete="off" /></td><td><div class="fieldHelp" id="dateFormattingPostfixHelp">How to format date constants. use prefix and postfix as per dbms being used. we intend to do this automatically in the future, ut as of now you should be carefu in setting this.</div></td></tr><tr>
<td class="labelCell" id="dateTimeFormattingPrefixLabelCell" ><div class="label" id="dateTimeFormattingPrefixLabel"  >Date and time formatting prefix</div></td><td class="fieldCell" id="dateTimeFormattingPrefixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dateTimeFormattingPrefix"  onchange="P2.fieldChanged(this, 'dateTimeFormattingPrefix');" onfocus="P2.fieldFocussed(this, 'dateTimeFormattingPrefix');" onblur="P2.inputFocusOut(this, 'dateTimeFormattingPrefix');" autocomplete="off" /></td><td><div class="fieldHelp" id="dateTimeFormattingPrefixHelp">How to format date-tme constants. use prefix and postfix as per dbms being used. we intend to do this automatically in the future, ut as of now you should be carefu in setting this.</div></td></tr><tr>
<td class="labelCell" id="dateTimeFormattingPostfixLabelCell" ><div class="label" id="dateTimeFormattingPostfixLabel"  >Date and formatting postfix</div></td><td class="fieldCell" id="dateTimeFormattingPostfixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="dateTimeFormattingPostfix"  onchange="P2.fieldChanged(this, 'dateTimeFormattingPostfix');" onfocus="P2.fieldFocussed(this, 'dateTimeFormattingPostfix');" onblur="P2.inputFocusOut(this, 'dateTimeFormattingPostfix');" autocomplete="off" /></td><td><div class="fieldHelp" id="dateTimeFormattingPostfixHelp">How to format date-tme constants. use prefix and postfix as per dbms being used. we intend to do this automatically in the future, ut as of now you should be carefu in setting this.</div></td></tr><tr>
<td class="labelCell" id="nlsDateFormatLabelCell" ><div class="label" id="nlsDateFormatLabel"  >Oracle nls_dateformat</div></td><td class="fieldCell" id="nlsDateFormatFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="nlsDateFormat"  onchange="P2.fieldChanged(this, 'nlsDateFormat');" onfocus="P2.fieldFocussed(this, 'nlsDateFormat');" onblur="P2.inputFocusOut(this, 'nlsDateFormat');" autocomplete="off" /></td><td><div class="fieldHelp" id="nlsDateFormatHelp">If you are using oracle data base, you must ensure that the default date format is yyyy-mm-dd. If the blobal setting is different from this, use this attribute to change it for the connection session</div></td></tr><tr>
<td class="labelCell" id="useQuotesInSqlLabelCell" ><div class="label" id="useQuotesInSqlLabel"  >Use quotes in sql</div></td><td class="fieldCell" id="useQuotesInSqlFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="useQuotesInSql"  onchange="P2.fieldChanged(this, 'useQuotesInSql');" onfocus="P2.fieldFocussed(this, 'useQuotesInSql');" onblur="P2.inputFocusOut(this, 'useQuotesInSql');" autocomplete="off" /></td><td><div class="fieldHelp" id="useQuotesInSqlHelp">Not used any more. This was created to handle certain naming convention related issue wth postgre sql in a specific project.</div></td></tr><tr>
<td class="labelCell" id="useNullForEmptyStringLabelCell" ><div class="label" id="useNullForEmptyStringLabel"  >NULL for empty string?</div></td><td class="fieldCell" id="useNullForEmptyStringFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="useNullForEmptyString"  onchange="P2.fieldChanged(this, 'useNullForEmptyString');" onfocus="P2.fieldFocussed(this, 'useNullForEmptyString');" onblur="P2.inputFocusOut(this, 'useNullForEmptyString');" autocomplete="off" /></td><td><div class="fieldHelp" id="useNullForEmptyStringHelp">Oracle has issue with storing empty string as valid value in varchar field. It treats it as null.  If you set this to true, exility uses NULL instead of empty string as value of a empty text field while generating sqls at run time.</div></td></tr> </table>  </div></div></div><div id="pageDetailsTabsDiv" style="display:none;"><div class="expandedfieldset" id="pageDetailsTop" >
<div class="displayPanel" id="pageDetails" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="pageDetailsFieldsTable" >
<col id="pageDetailsCol1" /><col id="pageDetailsCol2" /><col id="pageDetailsCol3" /><tr>
<td class="labelCell" id="projectNameLabelCell" ><div class="requiredLabel" id="projectNameLabel"  >Project name</div></td><td class="fieldCell" id="projectNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="projectName"  onchange="P2.fieldChanged(this, 'projectName');" onfocus="P2.fieldFocussed(this, 'projectName');" onblur="P2.inputFocusOut(this, 'projectName');" autocomplete="off" /></td><td><div class="fieldHelp" id="projectNameHelp">For documentaion. Not used, except for celebrus! Page gernator has a hard coded logic for that!</div></td></tr><tr>
<td class="labelCell" id="pageLayoutTypeLabelCell" ><div class="requiredLabel" id="pageLayoutTypeLabel"  >Page layout type</div></td><td class="fieldCell" id="pageLayoutTypeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="pageLayoutType"  onchange="P2.fieldChanged(this, 'pageLayoutType');" onfocus="P2.fieldFocussed(this, 'pageLayoutType');" onblur="P2.inputFocusOut(this, 'pageLayoutType');" autocomplete="off" /></td><td><div class="fieldHelp" id="pageLayoutTypeHelp">Determines the conventions for page gernator. css is the new standard, and all other values are only for existing projects</div></td></tr><tr>
<td class="labelCell" id="exilityFolderPrefixLabelCell" ><div class="requiredLabel" id="exilityFolderPrefixLabel"  >Exility folder prefix</div></td><td class="fieldCell" id="exilityFolderPrefixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="exilityFolderPrefix"  onchange="P2.fieldChanged(this, 'exilityFolderPrefix');" onfocus="P2.fieldFocussed(this, 'exilityFolderPrefix');" onblur="P2.inputFocusOut(this, 'exilityFolderPrefix');" autocomplete="off" /></td><td><div class="fieldHelp" id="exilityFolderPrefixHelp">not used any more. Used by page generater to include standard exility scripts.</div></td></tr><tr>
<td class="labelCell" id="commonFolderPrefixLabelCell" ><div class="requiredLabel" id="commonFolderPrefixLabel"  >Common folder prefix</div></td><td class="fieldCell" id="commonFolderPrefixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="commonFolderPrefix"  onchange="P2.fieldChanged(this, 'commonFolderPrefix');" onfocus="P2.fieldFocussed(this, 'commonFolderPrefix');" onblur="P2.inputFocusOut(this, 'commonFolderPrefix');" autocomplete="off" /></td><td><div class="fieldHelp" id="commonFolderPrefixHelp">not used any more. Used by page generater to include default.css and other common fiels to be included in all pages.</div></td></tr><tr>
<td class="labelCell" id="imageFilePrefixLabelCell" ><div class="requiredLabel" id="imageFilePrefixLabel"  >Image file prefix</div></td><td class="fieldCell" id="imageFilePrefixFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="imageFilePrefix"  onchange="P2.fieldChanged(this, 'imageFilePrefix');" onfocus="P2.fieldFocussed(this, 'imageFilePrefix');" onblur="P2.inputFocusOut(this, 'imageFilePrefix');" autocomplete="off" /></td><td><div class="fieldHelp" id="imageFilePrefixHelp">Used by generator to set src attribute for img tag. Should be the path of the image folder relative to a page.html e.g.  ../../images/exilityImages</div></td></tr><tr>
<td class="labelCell" id="paginateButtonTypeLabelCell" ><div class="requiredLabel" id="paginateButtonTypeLabel"  >Pagination button type</div></td><td class="fieldCell" id="paginateButtonTypeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="paginateButtonType"  onchange="P2.fieldChanged(this, 'paginateButtonType');" onfocus="P2.fieldFocussed(this, 'paginateButtonType');" onblur="P2.inputFocusOut(this, 'paginateButtonType');" autocomplete="off" /></td><td><div class="fieldHelp" id="paginateButtonTypeHelp">when exility is handling pagination, how should the buttons for navigations be managed? We have created copule of variants. Please come back with more if you need.</div></td></tr><tr>
<td class="labelCell" id="defaultPageHeightLabelCell" ><div class="requiredLabel" id="defaultPageHeightLabel"  >Default page height</div></td><td class="fieldCell" id="defaultPageHeightFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="defaultPageHeight"  onchange="P2.fieldChanged(this, 'defaultPageHeight');" onfocus="P2.fieldFocussed(this, 'defaultPageHeight');" onblur="P2.inputFocusOut(this, 'defaultPageHeight');" autocomplete="off" /></td><td><div class="fieldHelp" id="defaultPageHeightHelp">page height to be used for generated pages. Not used in css mode.</div></td></tr><tr>
<td class="labelCell" id="defaultPageWidthLabelCell" ><div class="requiredLabel" id="defaultPageWidthLabel"  >Default page width</div></td><td class="fieldCell" id="defaultPageWidthFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="defaultPageWidth"  onchange="P2.fieldChanged(this, 'defaultPageWidth');" onfocus="P2.fieldFocussed(this, 'defaultPageWidth');" onblur="P2.inputFocusOut(this, 'defaultPageWidth');" autocomplete="off" /></td><td><div class="fieldHelp" id="defaultPageWidthHelp">page width to be used for generated pages. Not used in css mode.</div></td></tr><tr>
<td class="labelCell" id="defaultPaginationSizeLabelCell" ><div class="label" id="defaultPaginationSizeLabel"  >Number of rows per pagination</div></td><td class="fieldCell" id="defaultPaginationSizeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="defaultPaginationSize"  onchange="P2.fieldChanged(this, 'defaultPaginationSize');" onfocus="P2.fieldFocussed(this, 'defaultPaginationSize');" onblur="P2.inputFocusOut(this, 'defaultPaginationSize');" autocomplete="off" /></td><td><div class="fieldHelp" id="defaultPaginationSizeHelp">If you provide this number, all list panels, by default, will be paginated with these many rows per page.</div></td></tr><tr>
<td class="labelCell" id="assumeTextForMissingDataElementLabelCell" ><div class="label" id="assumeTextForMissingDataElementLabel"  >Live with undefined elemens?</div></td><td class="fieldCell" id="assumeTextForMissingDataElementFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="assumeTextForMissingDataElement"  onchange="P2.fieldChanged(this, 'assumeTextForMissingDataElement');" onfocus="P2.fieldFocussed(this, 'assumeTextForMissingDataElement');" onblur="P2.inputFocusOut(this, 'assumeTextForMissingDataElement');" autocomplete="off" /></td><td><div class="fieldHelp" id="assumeTextForMissingDataElementHelp">Not recommended. Temporarary arrangement in a project to take care of some mass change issues.</div></td></tr><tr>
<td class="labelCell" id="alignPanelsLabelCell" ><div class="label" id="alignPanelsLabel"  >Align panels?</div></td><td class="fieldCell" id="alignPanelsFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="alignPanels"  onchange="P2.fieldChanged(this, 'alignPanels');" onfocus="P2.fieldFocussed(this, 'alignPanels');" onblur="P2.inputFocusOut(this, 'alignPanels');" autocomplete="off" /></td><td><div class="fieldHelp" id="alignPanelsHelp">Not used any more. Used for formatting page in a certain way for a specific project</div></td></tr><tr>
<td class="labelCell" id="htmlRootRelativeToResourcePathLabelCell" ><div class="requiredLabel" id="htmlRootRelativeToResourcePathLabel"  >Relative path of html from root</div></td><td class="fieldCell" id="htmlRootRelativeToResourcePathFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="htmlRootRelativeToResourcePath"  onchange="P2.fieldChanged(this, 'htmlRootRelativeToResourcePath');" onfocus="P2.fieldFocussed(this, 'htmlRootRelativeToResourcePath');" onblur="P2.inputFocusOut(this, 'htmlRootRelativeToResourcePath');" autocomplete="off" /></td><td><div class="fieldHelp" id="htmlRootRelativeToResourcePathHelp">Page generator uses this path to save generated htmls</div></td></tr><tr>
<td class="labelCell" id="starForRequiredFieldLabelCell" ><div class="requiredLabel" id="starForRequiredFieldLabel"  >Where do we put * for mandatory field?</div></td><td class="fieldCell" id="starForRequiredFieldFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="starForRequiredField"  onchange="P2.fieldChanged(this, 'starForRequiredField');" onfocus="P2.fieldFocussed(this, 'starForRequiredField');" onblur="P2.inputFocusOut(this, 'starForRequiredField');" autocomplete="off" /></td><td><div class="fieldHelp" id="starForRequiredFieldHelp">Not recommended. Should be handled thru css. none, before and after are options.</div></td></tr><tr>
<td class="labelCell" id="httpNoCacheTagRequiresLabelCell" ><div class="label" id="httpNoCacheTagRequiresLabel"  >Http no-cache for page?</div></td><td class="fieldCell" id="httpNoCacheTagRequiresFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="httpNoCacheTagRequires"  onchange="P2.fieldChanged(this, 'httpNoCacheTagRequires');" onfocus="P2.fieldFocussed(this, 'httpNoCacheTagRequires');" onblur="P2.inputFocusOut(this, 'httpNoCacheTagRequires');" autocomplete="off" /></td><td><div class="fieldHelp" id="httpNoCacheTagRequiresHelp">Not used any more. This should be handled in web server setting.</div></td></tr><tr>
<td class="labelCell" id="lastKeyEventTriggerLabelCell" ><div class="label" id="lastKeyEventTriggerLabel"  >Auto add-row on tab key?</div></td><td class="fieldCell" id="lastKeyEventTriggerFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="lastKeyEventTrigger"  onchange="P2.fieldChanged(this, 'lastKeyEventTrigger');" onfocus="P2.fieldFocussed(this, 'lastKeyEventTrigger');" onblur="P2.inputFocusOut(this, 'lastKeyEventTrigger');" autocomplete="off" /></td><td><div class="fieldHelp" id="lastKeyEventTriggerHelp">whether a new row has to be added automatically when user presses tab button on the last field. Like in a word processor</div></td></tr><tr>
<td class="labelCell" id="showDeleteOptionAtEndLabelCell" ><div class="label" id="showDeleteOptionAtEndLabel"  >Common delete at end?</div></td><td class="fieldCell" id="showDeleteOptionAtEndFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="showDeleteOptionAtEnd"  onchange="P2.fieldChanged(this, 'showDeleteOptionAtEnd');" onfocus="P2.fieldFocussed(this, 'showDeleteOptionAtEnd');" onblur="P2.inputFocusOut(this, 'showDeleteOptionAtEnd');" autocomplete="off" /></td><td><div class="fieldHelp" id="showDeleteOptionAtEndHelp">not used any more. Page generation issue for a specific project</div></td></tr><tr>
<td class="labelCell" id="showIamgeForDeleteOptionLabelCell" ><div class="label" id="showIamgeForDeleteOptionLabel"  >Show delete image?</div></td><td class="fieldCell" id="showIamgeForDeleteOptionFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="showIamgeForDeleteOption"  onchange="P2.fieldChanged(this, 'showIamgeForDeleteOption');" onfocus="P2.fieldFocussed(this, 'showIamgeForDeleteOption');" onblur="P2.inputFocusOut(this, 'showIamgeForDeleteOption');" autocomplete="off" /></td><td><div class="fieldHelp" id="showIamgeForDeleteOptionHelp">How delete row has to be handled in a grid. It can be either an image or we generate a simple check box.</div></td></tr><tr>
<td class="labelCell" id="showRequiredLabelinGridLabelCell" ><div class="label" id="showRequiredLabelinGridLabel"  >* for grid column?</div></td><td class="fieldCell" id="showRequiredLabelinGridFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="showRequiredLabelinGrid"  onchange="P2.fieldChanged(this, 'showRequiredLabelinGrid');" onfocus="P2.fieldFocussed(this, 'showRequiredLabelinGrid');" onblur="P2.inputFocusOut(this, 'showRequiredLabelinGrid');" autocomplete="off" /></td><td><div class="fieldHelp" id="showRequiredLabelinGridHelp">not used any more. Page generation issue for a specific project</div></td></tr><tr>
<td class="labelCell" id="spanForButtonPanelRequiresLabelCell" ><div class="label" id="spanForButtonPanelRequiresLabel"  >Span for button panel?</div></td><td class="fieldCell" id="spanForButtonPanelRequiresFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="spanForButtonPanelRequires"  onchange="P2.fieldChanged(this, 'spanForButtonPanelRequires');" onfocus="P2.fieldFocussed(this, 'spanForButtonPanelRequires');" onblur="P2.inputFocusOut(this, 'spanForButtonPanelRequires');" autocomplete="off" /></td><td><div class="fieldHelp" id="spanForButtonPanelRequiresHelp">not used any more. Page generation issue for a specific project</div></td></tr><tr>
<td class="labelCell" id="generateColTagsLabelCell" ><div class="label" id="generateColTagsLabel"  >Generate COL tags for table</div></td><td class="fieldCell" id="generateColTagsFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="generateColTags"  onchange="P2.fieldChanged(this, 'generateColTags');" onfocus="P2.fieldFocussed(this, 'generateColTags');" onblur="P2.inputFocusOut(this, 'generateColTags');" autocomplete="off" /></td><td><div class="fieldHelp" id="generateColTagsHelp">Defaults to true in pagetype css. earlier versions can make use of col tags for table so that the columns can be styled thru css.</div></td></tr><tr>
<td class="labelCell" id="quietResetActionLabelCell" ><div class="label" id="quietResetActionLabel"  >No need to warn when reset button is clicked</div></td><td class="fieldCell" id="quietResetActionFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="quietResetAction"  onchange="P2.fieldChanged(this, 'quietResetAction');" onfocus="P2.fieldFocussed(this, 'quietResetAction');" onblur="P2.inputFocusOut(this, 'quietResetAction');" autocomplete="off" /></td><td><div class="fieldHelp" id="quietResetActionHelp">Not recommended. Exility tracks changes to pages, and warns if user is leavinig page without saving. This can be controlled thru attribues at page level as well as at field level. However a project wanted this short cut.</div>&nbsp;
<input type="hidden"  id="resourceType"  onchange="P2.fieldChanged(this, 'resourceType');"value="applicationParameter" />&nbsp;
<input type="hidden"  id="resourceName"  onchange="P2.fieldChanged(this, 'resourceName');"value="applicationParameters" /></td></tr> </table>  </div></div></div><div id="deploymentTabsDiv" style="display:none;"><div class="expandedfieldset" id="deploymentTop" >
<div class="displayPanel" id="deployment" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="deploymentFieldsTable" >
<col id="deploymentCol1" /><col id="deploymentCol2" /><col id="deploymentCol3" /><tr>
<td class="labelCell" id="eMailHostLabelCell" ><div class="label" id="eMailHostLabel"  >Email host</div></td><td class="fieldCell" id="eMailHostFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="eMailHost"  onchange="P2.fieldChanged(this, 'eMailHost');" onfocus="P2.fieldFocussed(this, 'eMailHost');" onblur="P2.inputFocusOut(this, 'eMailHost');" autocomplete="off" /></td><td><div class="fieldHelp" id="eMailHostHelp">exility uses a fairly primitive email utility. You are encouraged to ask for more. This is the host name</div></td></tr><tr>
<td class="labelCell" id="eMailPortLabelCell" ><div class="label" id="eMailPortLabel"  >Email port</div></td><td class="fieldCell" id="eMailPortFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="eMailPort"  onchange="P2.fieldChanged(this, 'eMailPort');" onfocus="P2.fieldFocussed(this, 'eMailPort');" onblur="P2.inputFocusOut(this, 'eMailPort');" autocomplete="off" /></td><td><div class="fieldHelp" id="eMailPortHelp">exility uses a fairly primitive email utility. You are encouraged to ask for more. This is the port</div></td></tr><tr>
<td class="labelCell" id="eMailFromUserIdLabelCell" ><div class="label" id="eMailFromUserIdLabel"  >Email userid</div></td><td class="fieldCell" id="eMailFromUserIdFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="eMailFromUserId"  onchange="P2.fieldChanged(this, 'eMailFromUserId');" onfocus="P2.fieldFocussed(this, 'eMailFromUserId');" onblur="P2.inputFocusOut(this, 'eMailFromUserId');" autocomplete="off" /></td><td><div class="fieldHelp" id="eMailFromUserIdHelp">exility uses a fairly primitive email utility. You are encouraged to ask for more. This is the user id to be used to login to the mail server</div></td></tr><tr>
<td class="labelCell" id="eMailFromPasswordLabelCell" ><div class="label" id="eMailFromPasswordLabel"  >Email password</div></td><td class="fieldCell" id="eMailFromPasswordFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="eMailFromPassword"  onchange="P2.fieldChanged(this, 'eMailFromPassword');" onfocus="P2.fieldFocussed(this, 'eMailFromPassword');" onblur="P2.inputFocusOut(this, 'eMailFromPassword');" autocomplete="off" /></td><td><div class="fieldHelp" id="eMailFromPasswordHelp">exility uses a fairly primitive email utility. You are encouraged to ask for more. This is the password to be used to login to mail server</div></td></tr><tr>
<td class="labelCell" id="eMailBodyLabelCell" ><div class="label" id="eMailBodyLabel"  >Email pody</div></td><td class="fieldCell" id="eMailBodyFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="eMailBody"  onchange="P2.fieldChanged(this, 'eMailBody');" onfocus="P2.fieldFocussed(this, 'eMailBody');" onblur="P2.inputFocusOut(this, 'eMailBody');" autocomplete="off" /></td><td><div class="fieldHelp" id="eMailBodyHelp">exility uses a fairly primitive email utility. You are encouraged to ask for more. This is body of the mail to be sent</div></td></tr><tr>
<td class="labelCell" id="definitionsToBeCachedLabelCell" ><div class="label" id="definitionsToBeCachedLabel"  >Cache xmls?</div></td><td class="fieldCell" id="definitionsToBeCachedFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="definitionsToBeCached"  onchange="P2.fieldChanged(this, 'definitionsToBeCached');" onfocus="P2.fieldFocussed(this, 'definitionsToBeCached');" onblur="P2.inputFocusOut(this, 'definitionsToBeCached');" autocomplete="off" /></td><td><div class="fieldHelp" id="definitionsToBeCachedHelp">to be set to true in produciton, and false during development. When false, every resourece is loaded from disk each time, there by ensuring that the latest resource as saved the devloper is executed. However, in production we cache these to avoid over head of repeated reads from disk. we intend to move this parameter to web.xml, so that deployments are smoother.</div>&nbsp;
<input type="hidden"  id="trace"  onchange="P2.fieldChanged(this, 'trace');"/></td></tr><tr>
<td class="labelCell" id="licenceValidationLabelCell" ><div class="label" id="licenceValidationLabel"  >Licensed Instance?</div></td><td class="fieldCell" id="licenceValidationFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="licenceValidation"  onchange="P2.fieldChanged(this, 'licenceValidation');" onfocus="P2.fieldFocussed(this, 'licenceValidation');" onblur="P2.inputFocusOut(this, 'licenceValidation');" autocomplete="off" /></td><td><div class="fieldHelp" id="licenceValidationHelp">discontinued. licencing utilities are decoupled from exility.</div></td></tr><tr>
<td class="labelCell" id="securityEnabledLabelCell" ><div class="label" id="securityEnabledLabel"  >Enable security?</div></td><td class="fieldCell" id="securityEnabledFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="securityEnabled"  onchange="P2.fieldChanged(this, 'securityEnabled');" onfocus="P2.fieldFocussed(this, 'securityEnabled');" onblur="P2.inputFocusOut(this, 'securityEnabled');" autocomplete="off" /></td><td><div class="fieldHelp" id="securityEnabledHelp">not used any more due to security threat in case somme one forgets this. We have provided single-signon utility to take care of login issues during testing</div></td></tr><tr>
<td class="labelCell" id="cachePrimaryKeysLabelCell" ><div class="label" id="cachePrimaryKeysLabel"  >Cache primary keys?</div></td><td class="fieldCell" id="cachePrimaryKeysFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="cachePrimaryKeys"  onchange="P2.fieldChanged(this, 'cachePrimaryKeys');" onfocus="P2.fieldFocussed(this, 'cachePrimaryKeys');" onblur="P2.inputFocusOut(this, 'cachePrimaryKeys');" autocomplete="off" /></td><td><div class="fieldHelp" id="cachePrimaryKeysHelp">Not used any more because of the possibel damaze when not set properly. If there is always exactly one server aplication that is running, primary keys canbe cached, there by improving performance of key generation. However, if peopel forget to set this properly in a muti-server environment, this will lead to duplicate primary key generation.</div></td></tr> </table>  </div></div></div></div></div></div>
    </div>
    </form>
</body>
</html>  