
 var ele;
var P2 = new PM.ExilityPage(window, 'sql');
P2.onLoadActionNames = [ 'getFolders','checkForPageParameters'];
P2.pageWidth = 1028;
P2.pageHeight = 700;
P2.trackFieldChanges = true;
P2.breadCrumpTitle = 'sql';
P2.onFormChangeActionName = 'formChanged';
P2.onFormResetActionName = 'formReset';
/*Page parameters */
ele = new PM.PageParameter();
ele.name = 'resourceName';
ele.setTo = 'fileName';
P2.addParameter(ele);

ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.doNotValidate = true;
ele.isRequired = true;
ele.listServiceId = 'folders';
ele.onChangeActionName = 'getSqls';
ele.noAutoLoad = true;
ele.selectFirstOption = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.donotTrackChanges = true;
ele.suggestAfterMinChars = 1;
ele.name = 'folderName';
ele.label = 'Folder Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.listServiceId = 'files';
ele.onChangeActionName = 'getSql';
ele.noAutoLoad = true;
ele.selectFirstOption = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.donotTrackChanges = true;
ele.suggestAfterMinChars = 1;
ele.name = 'fileName';
ele.label = 'Sql Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.defaultValue = 'sql';
ele.name = 'resourceType';
ele.label = '';
ele.value = 'sql';
P2.addField(ele);

//special variable for tracking active tab of tab panel sqlDetails
var sqlDetailsActiveTabName = 'sqlAttributesTab';
var sqlDetailsActivePanelName = 'sqlAttributesTabsDiv';
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'module';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.TextInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.name = 'description';
ele.label = 'Description';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.onChangeActionName = 'hideOrShowSql';
ele.selectFirstOption = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = 'dynamicSql,Sql;preparedStatement,Prepared Statement;storedProcedure,Stored Procedure';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'sqlType';
ele.label = 'SQL Data Type';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = '0,Yes;1,No.';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'toBeExecuted';
ele.label = 'Data Extracted?';
ele.value = '';
P2.addField(ele);
ele = new PM.TextInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.name = 'storedProcedureName';
ele.label = 'Stored prodedure name';
ele.value = '';
P2.addField(ele);
ele = new PM.TextAreaField();
ele.dataType = 'text';
ele.name = 'sql';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'minParameters';
ele.label = 'Min parameters';
ele.value = '';
P2.addField(ele);

/* MetaData for Panel :inParms with table name = inputParameters*/
ele = new PM.GridPanel();
ele.name = 'inputParameters';
ele.panelName = 'inParms';
ele.showHeader = true;
ele.simulateClickOnFirstRow = true;
ele.simulateClickOnRow = 'none';
ele.tableName = 'inputParameters';
ele.uniqueColumns = 'name';
ele.dataForNewRowToBeClonedFromRow = 'none';
ele.slideEffect = 'none';
ele.rowHelpText = 'click to edit this parameter';
//linkedTableName  DOES NOT EXIST

P2.addTable(ele);
ele = new PM.OutputField();
ele.dataType = 'text';
ele.maxCharacters = 25;
ele.toBeSentToServer = true;
ele.name = 'inputParameters_name';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.defaultValue = 'SqlParameter';
ele.name = 'inputParameters__type';
ele.tableName = 'inputParameters';
ele.unqualifiedName = '_type';
ele.label = '';
ele.value = 'SqlParameter';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_description';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'description';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_label';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'label';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_isOptional';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'isOptional';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_defaultValue';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'defaultValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_dataElementName';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'dataElementName';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_parameterType';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'parameterType';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_index';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'index';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_toUpper';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'toUpper';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_gridName';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'gridName';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_basedOnColumnName';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'basedOnColumnName';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_doNotFormat';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'doNotFormat';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'inputParameters_justLeaveMeAlone';
ele.tableName = 'inputParameters';
ele.unqualifiedName = 'justLeaveMeAlone';
ele.label = '';
ele.value = '';
P2.addField(ele);

/* MetaData for Panel :inputEditPanel with table name = inputEdits*/
ele = new PM.DisplayPanel();
ele.name = 'inputEdits';
ele.panelName = 'inputEditPanel';
ele.tableName = 'inputEdits';
ele.slideEffect = 'none';
//linkedTableName  EXISTS 

ele.linkedTableName = 'inputParameters';
P2.addTable(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_name';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = 'normal,normal;list,list;filter,filter;combined,combined';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_parameterType';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'parameterType';
ele.label = 'Parameter type';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_description';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'description';
ele.label = 'Description';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = '0,Optional;1,Mandatory';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_isOptional';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'isOptional';
ele.label = 'Can value be omitted?';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_defaultValue';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'defaultValue';
ele.label = 'Default Value';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_dataElementName';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'dataElementName';
ele.label = 'Data Element Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_gridName';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'gridName';
ele.label = 'Grid name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_index';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'index';
ele.label = 'Row number';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_toUpper';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'toUpper';
ele.label = 'Convert to UPPER CASE';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_basedOnColumnName';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'basedOnColumnName';
ele.label = 'Filter column name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'inputEdits_basedOnColumnName';
ele.name = 'inputEdits_basedOnColumnValue';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'basedOnColumnValue';
ele.label = 'Value to match';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = '0,Format this value as per SQL;1,Do not format for SQL';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_doNotFormat';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'doNotFormat';
ele.label = 'Format for SQL';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = '0,Use Formattingt;1,Already formatted';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'inputEdits_justLeaveMeAlone';
ele.tableName = 'inputEdits';
ele.unqualifiedName = 'justLeaveMeAlone';
ele.label = 'Escape single quotes';
ele.value = '';
P2.addField(ele);

/* MetaData for Panel :outParms with table name = outputParameters*/
ele = new PM.GridPanel();
ele.name = 'outputParameters';
ele.panelName = 'outParms';
ele.showHeader = true;
ele.simulateClickOnFirstRow = true;
ele.simulateClickOnRow = 'none';
ele.tableName = 'outputParameters';
ele.uniqueColumns = 'name';
ele.dataForNewRowToBeClonedFromRow = 'none';
ele.slideEffect = 'none';
ele.rowHelpText = 'click to edit this parameter';
//linkedTableName  DOES NOT EXIST

P2.addTable(ele);
ele = new PM.OutputField();
ele.dataType = 'text';
ele.maxCharacters = 25;
ele.toBeSentToServer = true;
ele.name = 'outputParameters_name';
ele.tableName = 'outputParameters';
ele.unqualifiedName = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.defaultValue = 'Parameter';
ele.name = 'outputParameters__type';
ele.tableName = 'outputParameters';
ele.unqualifiedName = '_type';
ele.label = '';
ele.value = 'Parameter';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'outputParameters_description';
ele.tableName = 'outputParameters';
ele.unqualifiedName = 'description';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'outputParameters_label';
ele.tableName = 'outputParameters';
ele.unqualifiedName = 'label';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'outputParameters_defaultValue';
ele.tableName = 'outputParameters';
ele.unqualifiedName = 'defaultValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'outputParameters_dataElementName';
ele.tableName = 'outputParameters';
ele.unqualifiedName = 'dataElementName';
ele.label = '';
ele.value = '';
P2.addField(ele);

/* MetaData for Panel :outputEditPanel with table name = outputEdits*/
ele = new PM.DisplayPanel();
ele.name = 'outputEdits';
ele.panelName = 'outputEditPanel';
ele.tableName = 'outputEdits';
ele.slideEffect = 'none';
//linkedTableName  EXISTS 

ele.linkedTableName = 'outputParameters';
P2.addTable(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'outputEdits_name';
ele.tableName = 'outputEdits';
ele.unqualifiedName = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'outputEdits_label';
ele.tableName = 'outputEdits';
ele.unqualifiedName = 'label';
ele.label = 'Label';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'outputEdits_description';
ele.tableName = 'outputEdits';
ele.unqualifiedName = 'description';
ele.label = 'Description';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'outputEdits_defaultValue';
ele.tableName = 'outputEdits';
ele.unqualifiedName = 'defaultValue';
ele.label = 'Default Value';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'outputEdits_dataElementName';
ele.tableName = 'outputEdits';
ele.unqualifiedName = 'dataElementName';
ele.label = 'Data Element Name';
ele.value = '';
P2.addField(ele);
/***** action field = getFolders  ********/
ele = new PM.ServerAction();
ele.name = 'getFolders';
ele.serviceId = 'ide.getFolders';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.queryFieldNames = [ 'resourceType'];
ele.closeWindow = true;
ele.queryFieldSources = [ 'resourceType'];
P2.addAction(ele);
/***** action field = getSqls  ********/
ele = new PM.ServerAction();
ele.name = 'getSqls';
ele.serviceId = 'ide.getFiles';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.queryFieldNames = [ 'resourceType','folderName'];
ele.closeWindow = true;
ele.queryFieldSources = [ 'resourceType','folderName'];
P2.addAction(ele);
/***** action field = getSql  ********/
ele = new PM.ServerAction();
ele.name = 'getSql';
ele.serviceId = 'ide.getSql';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.queryFieldNames = [ 'folderName','fileName'];
ele.fieldToFocusAfterExecution = 'description';
ele.closeWindow = true;
ele.queryFieldSources = [ 'folderName','fileName'];
ele.disableFields = [ 'name'];
P2.addAction(ele);
/***** action field = save  ********/
ele = new PM.ServerAction();
ele.name = 'save';
ele.serviceId = 'ide.saveSql';
ele.callBackActionName = 'reselectSql';
ele.submitForm = true;
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.resetFormModifiedState = true;
ele.closeWindow = true;
P2.addAction(ele);
/***** action field = delete  ********/
ele = new PM.ServerAction();
ele.name = 'delete';
ele.serviceId = 'ide.deleteSql';
ele.callBackActionName = 'getSqls';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.resetFormModifiedState = true;
ele.queryFieldNames = [ 'name'];
ele.closeWindow = true;
ele.queryFieldSources = [ 'name'];
P2.addAction(ele);
/***** action field = checkForPageParameters  ********/
ele = new PM.LocalAction();
ele.name = 'checkForPageParameters';
ele.functionName = 'checkForPageParameters';
P2.addAction(ele);
/***** action field = reselectSql  ********/
ele = new PM.LocalAction();
ele.name = 'reselectSql';
ele.functionName = 'reselectSql';
P2.addAction(ele);
/***** action field = hideOrShowSql  ********/
ele = new PM.LocalAction();
ele.name = 'hideOrShowSql';
ele.functionName = 'hideOrShowSql';
P2.addAction(ele);
/***** action field = newSql  ********/
ele = new PM.LocalAction();
ele.name = 'newSql';
ele.functionName = 'newSql';
ele.fieldToFocusAfterExecution = 'name';
ele.showPanels = [ 'sqlAttributes'];
ele.enableFields = [ 'name'];
P2.addAction(ele);
/***** action field = formChanged  ********/
ele = new PM.DummyAction();
ele.name = 'formChanged';
ele.disableFields = [ 'folderName','fileName','new','delete'];
P2.addAction(ele);
/***** action field = formReset  ********/
ele = new PM.DummyAction();
ele.name = 'formReset';
ele.disableFields = [ 'folderName','fileName','new','delete'];
P2.addAction(ele);
/***** action field = close  ********/
ele = new PM.CloseAction();
ele.name = 'close';
ele.warnIfFormIsModified = true;
P2.addAction(ele);
/***** action field = reload  ********/
ele = new PM.ResetAction();
ele.name = 'reload';
ele.warnIfFormIsModified = true;
P2.addAction(ele);