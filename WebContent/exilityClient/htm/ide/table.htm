<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    <meta http-equiv="Cache-Control" content="no-cache" />
    <link rel="stylesheet" href="../../css/home/ezDefault.css" type="text/css" />
    <script type="text/javascript" src="../../js/api/exilityLoader.js"></script>
    
<script type="text/javascript" src="table.metadata.js" ></script> 
<script type="text/javascript" src="../../js/ide/table.js" ></script> 
<link rel="stylesheet" type="text/css" href="../../css/ide/table.css" />
</head>
<body onload="exilPageLoad();" style="display: none;" onunload="exilPageUnload();"
    onscroll="adjustFrameHeightToBodyHeight();">
    <form id="form1" onsubmit="if(event.preventDefault) event.preventDefault(); else event.returnValue= false; return false;" action="" accept-charset="UTF-8">
    <div class="page">
        <div id="pageTitle">Table</div>
        <div class="expandedfieldset" id="topButtonsTop" >
<div id="topButtons" class="topButtons" >
<input type="image"  class="imagebutton"  src="../../images/saveIcon.png" id="save" title="Save" onclick="P2.act(this, 'save', 'save', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/reloadIcon.png" id="reload" title="Reload" onclick="P2.act(this, 'reload', 'reload', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/closeIcon.png" id="close" title="Close" onclick="P2.act(this, 'close', 'close', event);" style="cursor:pointer;" /></div></div><div class="expandedfieldset" id="selectionTop" >
<div class="displayPanel" id="selection" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="selectionFieldsTable" >
<col id="selectionCol1" /><col id="selectionCol2" /><col id="selectionCol3" /><col id="selectionCol4" /><col id="selectionCol5" /><col id="selectionCol6" /><col id="selectionCol7" /><col id="selectionCol8" /><tr> <td colspan="2" ><div class="expandedfieldset" id="searchPanelTop" >
<div class="displayPanel" id="searchPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="searchPanelFieldsTable" >
<col id="searchPanelCol1" /><col id="searchPanelCol2" /><col id="searchPanelCol3" /><col id="searchPanelCol4" /><tr>
<td class="labelCell" id="folderNameLabelCell" ><div class="label" id="folderNameLabel"  >Folder Name</div></td><td class="fieldCell" id="folderNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="35"  maxlength="3000"  id="folderName"  onchange="P2.fieldChanged(this, 'folderName');" onfocus="P2.fieldFocussed(this, 'folderName');" onblur="P2.inputFocusOut(this, 'folderName');" autocomplete="off" /></td>
<td class="labelCell" id="fileNameLabelCell" ><div class="requiredLabel" id="fileNameLabel"  >Table Name</div></td><td class="fieldCell" id="fileNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="35"  maxlength="3000"  id="fileName"  onchange="P2.fieldChanged(this, 'fileName');" onfocus="P2.fieldFocussed(this, 'fileName');" onblur="P2.inputFocusOut(this, 'fileName');" autocomplete="off" />&nbsp;
<input type="hidden"  id="resourceType"  onchange="P2.fieldChanged(this, 'resourceType');"value="table" /></td></tr> </table>  </div></div></td> <td colspan="2" ><div class="expandedfieldset" id="btnPanelTop" >
<div class="displayPanel" id="btnPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="btnPanelFieldsTable" >
<col id="btnPanelCol1" /><col id="btnPanelCol2" /><col id="btnPanelCol3" /><col id="btnPanelCol4" /><tr> <td colspan="2" >
<input type="button" value="New Table" id="new" onclick="P2.act(this, 'new', 'newTable', event);" style="cursor:pointer;" /></td> <td colspan="2" >
<input type="button" value="Delete this Table" id="delete" onclick="P2.act(this, 'delete', 'delete', event);" style="cursor:pointer;" /></td></tr> </table>  </div></div></td><td colspan="2">&nbsp;</td></tr> </table>  </div></div><div class="expandedfieldset" id="editingAreaTop" >
<div class="tabpanel" id="editingArea"  >
 <div class="tabnav" id="editingAreaTabNav" ><div id="tableAttributesTab"  class="activetablabel"  tabcontainername="editingArea" onclick="P2.tabClicked(this, 'tableAttributesTabsDiv', 'editingArea');"  >Table Attributes</div><div id="columnAreaTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="editingArea" onclick="P2.tabClicked(this, 'columnAreaTabsDiv', 'editingArea');"  >Column Attributes</div></div><div class="tabs" id = "editingAreaTabs"><div id="tableAttributesTabsDiv"><div class="expandedfieldset" id="tableAttributesTop" >
<div class="displayPanel" id="tableAttributes" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="tableAttributesFieldsTable" >
<col id="tableAttributesCol1" /><col id="tableAttributesCol2" /><col id="tableAttributesCol3" /><col id="tableAttributesCol4" /><tr> <td colspan="4" ><div class="note" >Name is normally the name of the rdbms table. However, there could be two reasons why may have name different from table name.                          If you choose to create more than on templates on one rdbms table, you have to have different names. For example if there are role-based access restriction on some fields.                          If you choose a better naming convention than the one followed in naming rdbms tables.                          </div></td></tr><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="50"  maxlength="3000"  id="name"  onchange="P2.fieldChanged(this, 'name');" onfocus="P2.fieldFocussed(this, 'name');" onblur="P2.inputFocusOut(this, 'name');" autocomplete="off" /><div class="label" id="tableNameLabel"  >Table Name</div>
<input type="text" autocomplete="off" class="inputfield"  size="50"  maxlength="3000"  id="tableName"  onchange="P2.fieldChanged(this, 'tableName');" onfocus="P2.fieldFocussed(this, 'tableName');" onblur="P2.inputFocusOut(this, 'tableName');" autocomplete="off" /></td></tr><tr>
<td class="labelCell" id="moduleLabelCell" ><div class="label" id="moduleLabel"  >Module</div></td><td class="fieldCell" id="moduleFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="module"  onchange="P2.fieldChanged(this, 'module');" onfocus="P2.fieldFocussed(this, 'module');" onblur="P2.inputFocusOut(this, 'module');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >This is just for documentation. However we strongly recommend that you use this more like folder structure. That is, module is the folder name under which this table definition is stored.</div></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="label" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="110"  maxlength="3000"  id="description"  onchange="P2.fieldChanged(this, 'description');" onfocus="P2.fieldFocussed(this, 'description');" onblur="P2.inputFocusOut(this, 'description');" autocomplete="off" /></td></tr><tr>
<td class="labelCell" id="okToDeleteLabelCell" ><div class="label" id="okToDeleteLabel"  >Can rows be deleted?</div></td><td class="fieldCell" id="okToDeleteFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  value="No"  maxlength="3000"  id="okToDelete"  onchange="P2.fieldChanged(this, 'okToDelete');" onfocus="P2.fieldFocussed(this, 'okToDelete');" onblur="P2.inputFocusOut(this, 'okToDelete');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >A small safety step. tableDeleteTask throws-up an exception if this is not set to true.</div></td></tr><tr>
<td class="labelCell" id="keyToBegeneratedLabelCell" ><div class="label" id="keyToBegeneratedLabel"  >keyToBegenerated</div></td><td class="fieldCell" id="keyToBegeneratedFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  value="No"  maxlength="3000"  id="keyToBegenerated"  onchange="P2.fieldChanged(this, 'keyToBegenerated');" onfocus="P2.fieldFocussed(this, 'keyToBegenerated');" onblur="P2.inputFocusOut(this, 'keyToBegenerated');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If yes, exility generates a one-up number. Exility manages this thru a table named exilPrimaryKey. A row for each table is maintained there. In case you do some data preparation where in you8 have populated rows, delete the row in this table, so that Exility resets the value to the last used number.</div></td></tr><tr>
<td class="labelCell" id="createdTimestampNameLabelCell" ><div class="label" id="createdTimestampNameLabel"  >CreatedAt field name</div></td><td class="fieldCell" id="createdTimestampNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="createdTimestampName"  onchange="P2.fieldChanged(this, 'createdTimestampName');"/></td> <td colspan="2" ><div class="note" >Name of the column that represents createdTime. Note that you MUST define that as a column, and then specify it here. Exility DOES NOT add this column autamtically into the table. However, you should not supply value to this field. Exility sets the value to system time automatically. Similar treatment for next three attributes.</div></td></tr><tr>
<td class="labelCell" id="modifiedTimestampNameLabelCell" ><div class="label" id="modifiedTimestampNameLabel"  >ModifedAt field name</div></td><td class="fieldCell" id="modifiedTimestampNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="modifiedTimestampName"  onchange="P2.fieldChanged(this, 'modifiedTimestampName');"/></td> <td colspan="2" ><div class="note" ></div></td></tr><tr>
<td class="labelCell" id="createdUserNameLabelCell" ><div class="label" id="createdUserNameLabel"  >CreatedBy field name</div></td><td class="fieldCell" id="createdUserNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="createdUserName"  onchange="P2.fieldChanged(this, 'createdUserName');"/></td> <td colspan="2" ><div class="note" >logged-in user is determined based on loggedInUserName set in applicationParameters.</div></td></tr><tr>
<td class="labelCell" id="modifiedUserNameLabelCell" ><div class="label" id="modifiedUserNameLabel"  >CreatedBy field name</div></td><td class="fieldCell" id="modifiedUserNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="modifiedUserName"  onchange="P2.fieldChanged(this, 'modifiedUserName');"/></td> <td colspan="2" ><div class="note" ></div></td></tr> </table>  </div></div></div><div id="columnAreaTabsDiv" style="display:none;"><div class="expandedfieldset" id="columnAreaTop" >
<div class="displayPanel" id="columnArea" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="columnAreaFieldsTable" >
<col id="columnAreaCol1" /><col id="columnAreaCol2" /><col id="columnAreaCol3" /><col id="columnAreaCol4" /><tr> <td colspan="2" ><div class="expandedfieldset" id="colsTop" >
<div id="cols" class="listPanel" >
<table id="columns" class="gridtable"  border="1" ><col id="columnsCol1"  /><thead><tr ><th align="left" id="columns_nameLabel" ><div>&nbsp;Column</div></th></tr></thead><tbody ><tr onclick="P2.listClicked(this, 'columns', event);" title="click to edit this parameter"  class="gridrow" ><td align="left"><div class="field"  id="columns_name" >new column</div>
<input type="hidden"  id="columns_columnName"  onchange="P2.fieldChanged(this, 'columns_columnName');" onkeydown="P2.handleGridNav(this, 'columns_columnName', event);" onfocus="P2.fieldFocussed(this, 'columns_columnName');"/>
<input type="hidden"  id="columns_label"  onchange="P2.fieldChanged(this, 'columns_label');" onkeydown="P2.handleGridNav(this, 'columns_label', event);" onfocus="P2.fieldFocussed(this, 'columns_label');"/>
<input type="hidden"  id="columns_description"  onchange="P2.fieldChanged(this, 'columns_description');" onkeydown="P2.handleGridNav(this, 'columns_description', event);" onfocus="P2.fieldFocussed(this, 'columns_description');"/>
<input type="hidden"  id="columns_dataElementName"  onchange="P2.fieldChanged(this, 'columns_dataElementName');" onkeydown="P2.handleGridNav(this, 'columns_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'columns_dataElementName');"/>
<input type="hidden"  id="columns_defaultValue"  onchange="P2.fieldChanged(this, 'columns_defaultValue');" onkeydown="P2.handleGridNav(this, 'columns_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'columns_defaultValue');"/>
<input type="hidden"  id="columns_isOptional"  onchange="P2.fieldChanged(this, 'columns_isOptional');" onkeydown="P2.handleGridNav(this, 'columns_isOptional', event);" onfocus="P2.fieldFocussed(this, 'columns_isOptional');"/>
<input type="hidden"  id="columns_dependantOnColumnName"  onchange="P2.fieldChanged(this, 'columns_dependantOnColumnName');" onkeydown="P2.handleGridNav(this, 'columns_dependantOnColumnName', event);" onfocus="P2.fieldFocussed(this, 'columns_dependantOnColumnName');"/>
<input type="hidden"  id="columns_isKeyColumn"  onchange="P2.fieldChanged(this, 'columns_isKeyColumn');" onkeydown="P2.handleGridNav(this, 'columns_isKeyColumn', event);" onfocus="P2.fieldFocussed(this, 'columns_isKeyColumn');"/>
<input type="hidden"  id="columns_listServiceName"  onchange="P2.fieldChanged(this, 'columns_listServiceName');" onkeydown="P2.handleGridNav(this, 'columns_listServiceName', event);" onfocus="P2.fieldFocussed(this, 'columns_listServiceName');"/>
<input type="hidden"  id="columns_enumeration"  onchange="P2.fieldChanged(this, 'columns_enumeration');" onkeydown="P2.handleGridNav(this, 'columns_enumeration', event);" onfocus="P2.fieldFocussed(this, 'columns_enumeration');"/>
<input type="hidden"  id="columns_enumerationType"  onchange="P2.fieldChanged(this, 'columns_enumerationType');" onkeydown="P2.handleGridNav(this, 'columns_enumerationType', event);" onfocus="P2.fieldFocussed(this, 'columns_enumerationType');"/></td></tr></tbody></table></div></div></td> <td colspan="2" ><div class="expandedfieldset" id="colAreaTop" >
<div class="displayPanel" id="colArea" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="colAreaFieldsTable" >
<col id="colAreaCol1" /><col id="colAreaCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="navTop" >
<div class="buttonpanel" id="nav" >
<input type="button"  class="button" value="First" id="columnsMoveFirst"  />
<input type="button"  class="button" value="Prev" id="columnsMovePrev"  />
<input type="button"  class="button" value="Next" id="columnsMoveNext"  />
<input type="button"  class="button" value="Last" id="columnsMoveLast"  />
<input type="button"  class="button" value="New Column" id="columnsNewRow"  />
<input type="button"  class="button" value="Delete Column" id="columnsDeleteRow"  /></div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="colAttributesTop" >
<div class="displayPanel" id="colAttributes" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="column" >
<col id="colAttributesCol1" /><col id="colAttributesCol2" /><col id="colAttributesCol3" /><col id="colAttributesCol4" /><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  value="new column"  maxlength="3000"  id="column_name"  onchange="P2.fieldChanged(this, 'column_name');" onkeydown="P2.handleGridNav(this, 'column_name', event);" onfocus="P2.fieldFocussed(this, 'column_name');"/></td> <td colspan="2" ><div class="note" >Name used in your application. Normally this is the column name, and we STRONGLY recommend that. In an exceptional case that are approved by your tech-lead, you can choose to have a name that is different from columnName. in such a case, this column is known by this name in your application, while it is known by columnName(next field) in the data abse.</div></td></tr><tr>
<td class="labelCell" id="columnNameLabelCell" ><div class="label" id="columnNameLabel"  >Column Name</div></td><td class="fieldCell" id="columnNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_columnName"  onchange="P2.fieldChanged(this, 'column_columnName');" onkeydown="P2.handleGridNav(this, 'column_columnName', event);" onfocus="P2.fieldFocussed(this, 'column_columnName');"/></td> <td colspan="2" ><div class="note" >Leave this as blank, unless it is different from name above. Read comments for Name. leave it as blank</div></td></tr><tr>
<td class="labelCell" id="labelLabelCell" ><div class="label" id="labelLabel"  >Label</div></td><td class="fieldCell" id="labelFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_label"  onchange="P2.fieldChanged(this, 'column_label');" onkeydown="P2.handleGridNav(this, 'column_label', event);" onfocus="P2.fieldFocussed(this, 'column_label');"/></td> <td colspan="2" ><div class="note" >Label is intended to be used in the future for some auto generated pages.This label IS NOT USED as default in a page. Label specified in data dictionary serves that purpose.</div></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="label" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_description"  onchange="P2.fieldChanged(this, 'column_description');" onkeydown="P2.handleGridNav(this, 'column_description', event);" onfocus="P2.fieldFocussed(this, 'column_description');"/></td> <td colspan="2" ><div class="note" ></div></td></tr><tr>
<td class="labelCell" id="dataElementNameLabelCell" ><div class="label" id="dataElementNameLabel"  >Data Element Name</div></td><td class="fieldCell" id="dataElementNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_dataElementName"  onchange="P2.fieldChanged(this, 'column_dataElementName');" onkeydown="P2.handleGridNav(this, 'column_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'column_dataElementName');"/></td> <td colspan="2" ><div class="note" >Leave this as blank, unless there is no entry in data dictionary for name specified in first field.</div></td></tr><tr>
<td class="labelCell" id="defaultValueLabelCell" ><div class="label" id="defaultValueLabel"  >Default Value</div></td><td class="fieldCell" id="defaultValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_defaultValue"  onchange="P2.fieldChanged(this, 'column_defaultValue');" onkeydown="P2.handleGridNav(this, 'column_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'column_defaultValue');"/></td> <td colspan="2" ><div class="note" >If client does not supply value for this field for an insert (create/add) operation, then this value is assumed. Note that this value will not be used in an update operation.</div></td></tr><tr>
<td class="labelCell" id="isOptionalLabelCell" ><div class="label" id="isOptionalLabel"  >Can value be omitted?</div></td><td class="fieldCell" id="isOptionalFieldCell" ></td> <td colspan="2" ><div class="note" >Can the value be omitted during an insert (create/add) operation? If you have set a default value, then there is no need for you to make this field optional. Note that this has no implication for an update operation.</div></td></tr><tr>
<td class="labelCell" id="dependantOnColumnNameLabelCell" ><div class="label" id="dependantOnColumnNameLabel"  >Depends on Column</div></td><td class="fieldCell" id="dependantOnColumnNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_dependantOnColumnName"  onchange="P2.fieldChanged(this, 'column_dependantOnColumnName');" onkeydown="P2.handleGridNav(this, 'column_dependantOnColumnName', event);" onfocus="P2.fieldFocussed(this, 'column_dependantOnColumnName');"/></td> <td colspan="2" ><div class="note" >If this column is mandatory only if another column value is specified, then use this feature.</div></td></tr><tr>
<td class="labelCell" id="isKeyColumnLabelCell" ><div class="label" id="isKeyColumnLabel"  >Is this a Key Column?</div></td><td class="fieldCell" id="isKeyColumnFieldCell" ></td> <td colspan="2" ><div class="note" >If you mark this true for more than one key, then we assume that the primary key is a composite of al the marked one. We STRONGLY recommend using a surrogate (generated by Exility) primary key. This would be in addition to a logical unique key you may have in the table.</div></td></tr><tr>
<td class="labelCell" id="listServiceNameLabelCell" ><div class="label" id="listServiceNameLabel"  >List Service Name</div></td><td class="fieldCell" id="listServiceNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_listServiceName"  onchange="P2.fieldChanged(this, 'column_listServiceName');" onkeydown="P2.handleGridNav(this, 'column_listServiceName', event);" onfocus="P2.fieldFocussed(this, 'column_listServiceName');"/></td> <td colspan="2" ><div class="note" >Do I use this or the one specified in data dictionary?</div></td></tr><tr>
<td class="labelCell" id="enumerationLabelCell" ><div class="label" id="enumerationLabel"  >Value List</div></td><td class="fieldCell" id="enumerationFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_enumeration"  onchange="P2.fieldChanged(this, 'column_enumeration');" onkeydown="P2.handleGridNav(this, 'column_enumeration', event);" onfocus="P2.fieldFocussed(this, 'column_enumeration');"/></td> <td colspan="2" ><div class="note" >If this field can have a only a list of predetermined values, specify them in a comma separated list. e.g. red,blue,orange or 1,5,8. You have to ensure that the values are valid for the data type of this column.</div></td></tr><tr>
<td class="labelCell" id="enumerationTypeLabelCell" ><div class="label" id="enumerationTypeLabel"  >Type of enumeraiton</div></td><td class="fieldCell" id="enumerationTypeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="column_enumerationType"  onchange="P2.fieldChanged(this, 'column_enumerationType');" onkeydown="P2.handleGridNav(this, 'column_enumerationType', event);" onfocus="P2.fieldFocussed(this, 'column_enumerationType');"/></td> <td colspan="2" ><div class="note" >can this be different from the data type? Will clarify.</div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></div></div></div></div>
    </div>
    </form>
</body>
</html>  