<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    <meta http-equiv="Cache-Control" content="no-cache" />
    <link rel="stylesheet" href="../../css/home/ezDefault.css" type="text/css" />
    <script type="text/javascript" src="../../js/api/exilityLoader.js"></script>
    
<script type="text/javascript" src="dataType.metadata.js" ></script> 
<script type="text/javascript" src="../../js/ide/dataType.js" ></script> 
<link rel="stylesheet" type="text/css" href="../../css/ide/dataType.css" />
</head>
<body onload="exilPageLoad();" style="display: none;" onunload="exilPageUnload();"
    onscroll="adjustFrameHeightToBodyHeight();">
    <form id="form1" onsubmit="if(event.preventDefault) event.preventDefault(); else event.returnValue= false; return false;" action="" accept-charset="UTF-8">
    <div class="page">
        <div class="expandedfieldset" id="topButtonsTop" >
<div id="topButtons" class="topButtons" >
<input type="image"  class="imagebutton"  src="../../images/saveIcon.png" id="save" title="Save" onclick="P2.act(this, 'save', 'doSave', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/reloadIcon.png" id="reload" title="Reload" onclick="P2.act(this, 'reload', 'reload', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/closeIcon.png" id="close" title="Close" onclick="P2.act(this, 'close', 'close', event);" style="cursor:pointer;" /></div></div><div class="expandedfieldset" id="searchPanelTop" >
<div class="displayPanel" id="searchPanel" >  <table class="fieldsTable"  id="searchPanelFieldsTable" >
<col id="searchPanelCol1" /><col id="searchPanelCol2" /><tr>
<td class="labelCell" id="fileNameLabelCell" ><div class="requiredLabel" id="fileNameLabel"  >File Name</div></td><td class="fieldCell" id="fileNameFieldCell" >
<select  id="fileName"  onchange="P2.fieldChanged(this, 'fileName');"></select>&nbsp;
<input type="hidden"  id="resourceType"  onchange="P2.fieldChanged(this, 'resourceType');"value="dataType" /></td></tr> </table>  </div></div><div class="expandedfieldset" id="dataTop" >
<div class="displayPanel" id="data" >  <table class="fieldsTable"  id="dataFieldsTable" >
<col id="dataCol1" /><col id="dataCol2" /><col id="dataCol3" /><col id="dataCol4" /><tr> <td colspan="2" ><div class="expandedfieldset" id="dtsTop" >
<div id="dts" class="listPanel" >
<table id="dataTypes" class="gridtable"  border="1" ><col id="dataTypesCol1"  /><col id="dataTypesCol2"  /><thead><tr ><th class="left" id="dataTypes_bulkActionLabel" ><div>&nbsp;&nbsp;</div></th><th class="left" id="dataTypes_nameLabel" ><div>&nbsp;Data Type Name</div></th></tr></thead><tbody ><tr onclick="P2.listClicked(this, 'dataTypes', event);" title="click to edit this Data Type."  class="gridrow" ><td class="left" ><img alt=""  id="dataTypes_bulkAction" src="" /></td><td class="left" ><div class="field"  id="dataTypes_name" >&nbsp;</div>
<input type="hidden"  id="dataTypes__type"  onchange="P2.fieldChanged(this, 'dataTypes__type');" onkeydown="P2.handleGridNav(this, 'dataTypes__type', event);" onfocus="P2.fieldFocussed(this, 'dataTypes__type');"/>
<input type="hidden"  id="dataTypes_description"  onchange="P2.fieldChanged(this, 'dataTypes_description');" onkeydown="P2.handleGridNav(this, 'dataTypes_description', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_description');"/>
<input type="hidden"  id="dataTypes_messageName"  onchange="P2.fieldChanged(this, 'dataTypes_messageName');" onkeydown="P2.handleGridNav(this, 'dataTypes_messageName', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_messageName');"/>
<input type="hidden"  id="dataTypes_regex"  onchange="P2.fieldChanged(this, 'dataTypes_regex');" onkeydown="P2.handleGridNav(this, 'dataTypes_regex', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_regex');"/>
<input type="hidden"  id="dataTypes_minLength"  onchange="P2.fieldChanged(this, 'dataTypes_minLength');" onkeydown="P2.handleGridNav(this, 'dataTypes_minLength', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_minLength');"/>
<input type="hidden"  id="dataTypes_maxLength"  onchange="P2.fieldChanged(this, 'dataTypes_maxLength');" onkeydown="P2.handleGridNav(this, 'dataTypes_maxLength', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_maxLength');"/>
<input type="hidden"  id="dataTypes_minValue"  onchange="P2.fieldChanged(this, 'dataTypes_minValue');" onkeydown="P2.handleGridNav(this, 'dataTypes_minValue', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_minValue');"/>
<input type="hidden"  id="dataTypes_maxValue"  onchange="P2.fieldChanged(this, 'dataTypes_maxValue');" onkeydown="P2.handleGridNav(this, 'dataTypes_maxValue', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_maxValue');"/>
<input type="hidden"  id="dataTypes_allowNegativeValue"  onchange="P2.fieldChanged(this, 'dataTypes_allowNegativeValue');" onkeydown="P2.handleGridNav(this, 'dataTypes_allowNegativeValue', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_allowNegativeValue');"/>
<input type="hidden"  id="dataTypes_numberOfDecimals"  onchange="P2.fieldChanged(this, 'dataTypes_numberOfDecimals');" onkeydown="P2.handleGridNav(this, 'dataTypes_numberOfDecimals', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_numberOfDecimals');"/>
<input type="hidden"  id="dataTypes_maxDaysBeforeToday"  onchange="P2.fieldChanged(this, 'dataTypes_maxDaysBeforeToday');" onkeydown="P2.handleGridNav(this, 'dataTypes_maxDaysBeforeToday', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_maxDaysBeforeToday');"/>
<input type="hidden"  id="dataTypes_maxDaysAfterToday"  onchange="P2.fieldChanged(this, 'dataTypes_maxDaysAfterToday');" onkeydown="P2.handleGridNav(this, 'dataTypes_maxDaysAfterToday', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_maxDaysAfterToday');"/>
<input type="hidden"  id="dataTypes_includesTime"  onchange="P2.fieldChanged(this, 'dataTypes_includesTime');" onkeydown="P2.handleGridNav(this, 'dataTypes_includesTime', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_includesTime');"/>
<input type="hidden"  id="dataTypes_trueValue"  onchange="P2.fieldChanged(this, 'dataTypes_trueValue');" onkeydown="P2.handleGridNav(this, 'dataTypes_trueValue', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_trueValue');"/>
<input type="hidden"  id="dataTypes_falseValue"  onchange="P2.fieldChanged(this, 'dataTypes_falseValue');" onkeydown="P2.handleGridNav(this, 'dataTypes_falseValue', event);" onfocus="P2.fieldFocussed(this, 'dataTypes_falseValue');"/></td></tr></tbody></table></div></div></td> <td colspan="2" ><div class="expandedfieldset" id="detailsTop" >
<div class="displayPanel" id="details" >  <table class="fieldsTable"  id="detailsFieldsTable" >
<col id="detailsCol1" /><col id="detailsCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="navActionsTop" >
<div class="buttonpanel" id="navActions" >
<input type="button"  class="button" value="First" id="dataTypesMoveFirst"  />
<input type="button"  class="button" value="Prev" id="dataTypesMovePrev"  />
<input type="button"  class="button" value="Next" id="dataTypesMoveNext"  />
<input type="button"  class="button" value="Last" id="dataTypesMoveLast"  />
<input type="button"  class="button" value="New Data Type" id="dataTypesNewRow"  />
<input type="button"  class="button" value="Delete This Data Type" id="dataTypesDeleteRow"  />
<input type="button"  class="button" value="Undelete This Data Type" id="dataTypesUndeleteRow"  /></div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="editPanelTop" >
<div class="displayPanel" id="editPanel" >  <table class="fieldsTable"  id="editingTable" >
<col id="editPanelCol1" /><col id="editPanelCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="commonFieldsTop" >
<div class="displayPanel" id="commonFields" >  <table class="fieldsTable"  id="commonFieldsFieldsTable" >
<col id="commonFieldsCol1" /><col id="commonFieldsCol2" /><col id="commonFieldsCol3" /><col id="commonFieldsCol4" /><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_name"  onchange="P2.fieldChanged(this, 'editingTable_name');" onkeydown="P2.handleGridNav(this, 'editingTable_name', event);" onfocus="P2.fieldFocussed(this, 'editingTable_name');" onblur="P2.inputFocusOut(this, 'editingTable_name');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >camelCase naming convention is recommended. Let the name suggest its use, and not its definition. e.g. shortName and NOT text15. Remember, the whole idea is to keep the flexibility of changing the length in place. You shoudl not end-up with a text20 data type with a lenght of 25 chars!!!</div></td></tr><tr>
<td class="labelCell" id="_typeLabelCell" ><div class="requiredLabel" id="_typeLabel"  >Type</div></td><td class="fieldCell" id="_typeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable__type"  onchange="P2.fieldChanged(this, 'editingTable__type');" onkeydown="P2.handleGridNav(this, 'editingTable__type', event);" onfocus="P2.fieldFocussed(this, 'editingTable__type');" onblur="P2.inputFocusOut(this, 'editingTable__type');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >People with Oracle background tend to use a char(1) dat type for boolean. We strongly discourage this practice. Boolean is a good concept!!</div></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="requiredLabel" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="100"  maxlength="3000"  id="editingTable_description"  onchange="P2.fieldChanged(this, 'editingTable_description');" onkeydown="P2.handleGridNav(this, 'editingTable_description', event);" onfocus="P2.fieldFocussed(this, 'editingTable_description');" onblur="P2.inputFocusOut(this, 'editingTable_description');" autocomplete="off" /></td></tr><tr>
<td class="labelCell" id="messageNameLabelCell" ><div class="requiredLabel" id="messageNameLabel"  >Message Name</div></td><td class="fieldCell" id="messageNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_messageName"  onchange="P2.fieldChanged(this, 'editingTable_messageName');" onkeydown="P2.handleGridNav(this, 'editingTable_messageName', event);" onfocus="P2.fieldFocussed(this, 'editingTable_messageName');" onblur="P2.inputFocusOut(this, 'editingTable_messageName');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >message name to be used to communicate to the user when she types an invalid value for this type. We recommend a conventionto create one message for each data type and call it invaliddataType. e.g. invalidShortName.</div></td></tr> </table>  </div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="textFieldsTop" >
<div class="displayPanel" id="textFields" >  <table class="fieldsTable"  id="textFieldsFieldsTable" >
<col id="textFieldsCol1" /><col id="textFieldsCol2" /><col id="textFieldsCol3" /><col id="textFieldsCol4" /><tr>
<td class="labelCell" id="minLengthLabelCell" ><div class="label" id="minLengthLabel"  >Min length</div></td><td class="fieldCell" id="minLengthFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_minLength"  onchange="P2.fieldChanged(this, 'editingTable_minLength');" onkeydown="P2.handleGridNav(this, 'editingTable_minLength', event);" onfocus="P2.fieldFocussed(this, 'editingTable_minLength');" onblur="P2.inputFocusOut(this, 'editingTable_minLength');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >minimum number of characters required for this field to be valid. Note that spaces at the beginning and at end are trimmed automatically by exility when the field is read.</div></td></tr><tr>
<td class="labelCell" id="maxLengthLabelCell" ><div class="label" id="maxLengthLabel"  >Max length</div></td><td class="fieldCell" id="maxLengthFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_maxLength"  onchange="P2.fieldChanged(this, 'editingTable_maxLength');" onkeydown="P2.handleGridNav(this, 'editingTable_maxLength', event);" onfocus="P2.fieldFocussed(this, 'editingTable_maxLength');" onblur="P2.inputFocusOut(this, 'editingTable_maxLength');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >maximum number of characters, including embedded spaces that this field can contain.</div></td></tr><tr>
<td class="labelCell" id="regexLabelCell" ><div class="label" id="regexLabel"  >Regex</div></td><td class="fieldCell" id="regexFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_regex"  onchange="P2.fieldChanged(this, 'editingTable_regex');" onkeydown="P2.handleGridNav(this, 'editingTable_regex', event);" onfocus="P2.fieldFocussed(this, 'editingTable_regex');" onblur="P2.inputFocusOut(this, 'editingTable_regex');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Well, this is a technical term, and you have to be aware of regular expression to use this. We recommend simple regexes only. Complex regexes may behave differently on client and server, and on diffetrent flavors of servers!!</div></td></tr> </table>  </div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="numberFieldsTop" >
<div class="displayPanel" id="numberFields" >  <table class="fieldsTable"  id="numberFieldsFieldsTable" >
<col id="numberFieldsCol1" /><col id="numberFieldsCol2" /><col id="numberFieldsCol3" /><col id="numberFieldsCol4" /><tr>
<td class="labelCell" id="minValueLabelCell" ><div class="label" id="minValueLabel"  >Min value</div></td><td class="fieldCell" id="minValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_minValue"  onchange="P2.fieldChanged(this, 'editingTable_minValue');" onkeydown="P2.handleGridNav(this, 'editingTable_minValue', event);" onfocus="P2.fieldFocussed(this, 'editingTable_minValue');" onblur="P2.inputFocusOut(this, 'editingTable_minValue');" autocomplete="off" />&nbsp;
<input type="hidden"  id="editingTable_allowNegativeValue"  onchange="P2.fieldChanged(this, 'editingTable_allowNegativeValue');" onkeydown="P2.handleGridNav(this, 'editingTable_allowNegativeValue', event);" onfocus="P2.fieldFocussed(this, 'editingTable_allowNegativeValue');"/></td> <td colspan="2" ><div class="note" >Zero might look like a good min, but most likely it is not. In business, 0 probably means optional, and hence you may live with 1 as min. And if you want to allow negative, restrict to a max of 15 digits</div></td></tr><tr>
<td class="labelCell" id="maxValueLabelCell" ><div class="label" id="maxValueLabel"  >Max value</div></td><td class="fieldCell" id="maxValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_maxValue"  onchange="P2.fieldChanged(this, 'editingTable_maxValue');" onkeydown="P2.handleGridNav(this, 'editingTable_maxValue', event);" onfocus="P2.fieldFocussed(this, 'editingTable_maxValue');" onblur="P2.inputFocusOut(this, 'editingTable_maxValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Don't say sky is the limit. Fifteen digits is just too much, and you shold set max to that value, at most.</div></td></tr><tr>
<td class="labelCell" id="numberOfDecimalsLabelCell" ><div class="label" id="numberOfDecimalsLabel"  >Nbr fracitonal digits</div></td><td class="fieldCell" id="numberOfDecimalsFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_numberOfDecimals"  onchange="P2.fieldChanged(this, 'editingTable_numberOfDecimals');" onkeydown="P2.handleGridNav(this, 'editingTable_numberOfDecimals', event);" onfocus="P2.fieldFocussed(this, 'editingTable_numberOfDecimals');" onblur="P2.inputFocusOut(this, 'editingTable_numberOfDecimals');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >MaxIf user types a value different from this. we still accept it and round-it to these many places. Also, when the field is output, it is formatted to these many places.</div></td></tr> </table>  </div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="dateFieldsTop" >
<div class="displayPanel" id="dateFields" >  <table class="fieldsTable"  id="dateFieldsFieldsTable" >
<col id="dateFieldsCol1" /><col id="dateFieldsCol2" /><col id="dateFieldsCol3" /><col id="dateFieldsCol4" /><tr>
<td class="labelCell" id="maxDaysBeforeTodayLabelCell" ><div class="label" id="maxDaysBeforeTodayLabel"  >Max days into past</div></td><td class="fieldCell" id="maxDaysBeforeTodayFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_maxDaysBeforeToday"  onchange="P2.fieldChanged(this, 'editingTable_maxDaysBeforeToday');" onkeydown="P2.handleGridNav(this, 'editingTable_maxDaysBeforeToday', event);" onfocus="P2.fieldFocussed(this, 'editingTable_maxDaysBeforeToday');" onblur="P2.inputFocusOut(this, 'editingTable_maxDaysBeforeToday');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >What is the lower limit for this date? If it is, say, 1 year into the past, use 365 as the value here. If the date HAS to be in the future, say at least one year, use -365. if the date has to be exactly today, well we do not recommend making it an input field, but if you prefer it that way, use 0 for both limits :-) </div></td></tr><tr>
<td class="labelCell" id="maxDaysAfterTodayLabelCell" ><div class="label" id="maxDaysAfterTodayLabel"  >Max days into future</div></td><td class="fieldCell" id="maxDaysAfterTodayFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_maxDaysAfterToday"  onchange="P2.fieldChanged(this, 'editingTable_maxDaysAfterToday');" onkeydown="P2.handleGridNav(this, 'editingTable_maxDaysAfterToday', event);" onfocus="P2.fieldFocussed(this, 'editingTable_maxDaysAfterToday');" onblur="P2.inputFocusOut(this, 'editingTable_maxDaysAfterToday');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Set the upper limit for the date. If the upper limit is in the future, ie. after today, use a positive integer. If the max date has to be before today, use a negative number to indicate number of days before today. e.g. if you use -12 here, and today happens to be friday the 13th, any date after 1st is considered to be invalid.</div></td></tr><tr>
<td class="labelCell" id="includesTimeLabelCell" ><div class="label" id="includesTimeLabel"  >Includes time?</div></td><td class="fieldCell" id="includesTimeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_includesTime"  onchange="P2.fieldChanged(this, 'editingTable_includesTime');" onkeydown="P2.handleGridNav(this, 'editingTable_includesTime', event);" onfocus="P2.fieldFocussed(this, 'editingTable_includesTime');" onblur="P2.inputFocusOut(this, 'editingTable_includesTime');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Computers find it easy to internally represent date as absolute time elapsed from a reference. Because of this, date field and date-with-time are treated the same way. This convention has crossed over to data types as well. We have designed a common data type. Please tell us whether this data type requires time component to be tracked.</div></td></tr> </table>  </div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="booleanFieldsTop" >
<div class="displayPanel" id="booleanFields" >  <table class="fieldsTable"  id="booleanFieldsFieldsTable" >
<col id="booleanFieldsCol1" /><col id="booleanFieldsCol2" /><col id="booleanFieldsCol3" /><col id="booleanFieldsCol4" /><tr>
<td class="labelCell" id="trueValueLabelCell" ><div class="label" id="trueValueLabel"  >Text when true</div></td><td class="fieldCell" id="trueValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_trueValue"  onchange="P2.fieldChanged(this, 'editingTable_trueValue');" onkeydown="P2.handleGridNav(this, 'editingTable_trueValue', event);" onfocus="P2.fieldFocussed(this, 'editingTable_trueValue');" onblur="P2.inputFocusOut(this, 'editingTable_trueValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >  trueValue and false value are used as labels for radio buttons when the field is rendered as a radio button. e.g. Status : -active -inactive. We recommend radio buttons whenever such labels read better than using a question mark as a label and render the field as a check-box.</div></td></tr><tr>
<td class="labelCell" id="falseValueLabelCell" ><div class="label" id="falseValueLabel"  >Text when false</div></td><td class="fieldCell" id="falseValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="editingTable_falseValue"  onchange="P2.fieldChanged(this, 'editingTable_falseValue');" onkeydown="P2.handleGridNav(this, 'editingTable_falseValue', event);" onfocus="P2.fieldFocussed(this, 'editingTable_falseValue');" onblur="P2.inputFocusOut(this, 'editingTable_falseValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" ></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div>
    </div>
    </form>
</body>
</html>