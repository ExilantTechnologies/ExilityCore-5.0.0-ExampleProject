
 var ele;
var P2 = new PM.ExilityPage(window, 'dataType');
P2.onLoadActionNames = [ 'getMessages','checkForPageParameters'];
P2.pageWidth = 1028;
P2.pageHeight = 700;
P2.trackFieldChanges = true;
P2.breadCrumpTitle = 'dataType';
P2.title = 'Data Type';
/*Page parameters */
ele = new PM.PageParameter();
ele.name = 'resourceName';
ele.setTo = 'fileName';
P2.addParameter(ele);

ele = new PM.SelectionField();
ele.dataType = 'text';
ele.isRequired = true;
ele.listServiceId = 'files';
ele.onChangeActionName = 'getDataTypes';
ele.noAutoLoad = true;
ele.selectFirstOption = true;
ele.selectionValueType = 'text';
ele.donotTrackChanges = true;
ele.name = 'fileName';
ele.label = 'File Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.defaultValue = 'dataType';
ele.name = 'resourceType';
ele.label = '';
ele.value = 'dataType';
P2.addField(ele);

/* MetaData for Panel :dts with table name = dataTypes*/
ele = new PM.GridPanel();
ele.name = 'dataTypes';
ele.panelName = 'dts';
ele.onClickActionName = 'rowClicked';
ele.showHeader = true;
ele.simulateClickOnFirstRow = true;
ele.simulateClickOnRow = 'none';
ele.tableName = 'dataTypes';
ele.uniqueColumns = 'name';
ele.dataForNewRowToBeClonedFromRow = 'none';
ele.slideEffect = 'none';
ele.confirmOnRowDelete = true;
ele.rowHelpText = 'click to edit this Data Type.';
//linkedTableName  DOES NOT EXIST

ele.actionFieldName = 'dataTypes_bulkAction';
ele.idFieldName = 'dataTypes_name';
ele.keyFieldName = 'dataTypes_bulkAction';
P2.addTable(ele);
ele = new PM.ImageField();
ele.baseSrc = '../../images/row';
ele.dataType = 'text';
ele.imageExtension = '.png';
ele.name = 'dataTypes_bulkAction';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'bulkAction';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.OutputField();
ele.dataType = 'text';
ele.maxCharacters = 25;
ele.toBeSentToServer = true;
ele.name = 'dataTypes_name';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'name';
ele.label = 'Data Type Name';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes__type';
ele.tableName = 'dataTypes';
ele.unqualifiedName = '_type';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_description';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'description';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_messageName';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'messageName';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_regex';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'regex';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_minLength';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'minLength';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_maxLength';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'maxLength';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_minValue';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'minValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_maxValue';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'maxValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_allowNegativeValue';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'allowNegativeValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_numberOfDecimals';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'numberOfDecimals';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_maxDaysBeforeToday';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'maxDaysBeforeToday';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_maxDaysAfterToday';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'maxDaysAfterToday';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_includesTime';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'includesTime';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_trueValue';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'trueValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'dataTypes_falseValue';
ele.tableName = 'dataTypes';
ele.unqualifiedName = 'falseValue';
ele.label = '';
ele.value = '';
P2.addField(ele);

/* MetaData for Panel :editPanel with table name = editingTable*/
ele = new PM.DisplayPanel();
ele.name = 'editingTable';
ele.panelName = 'editPanel';
ele.tableName = 'editingTable';
ele.slideEffect = 'none';
//linkedTableName  EXISTS 

ele.linkedTableName = 'dataTypes';
P2.addTable(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_name';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'name';
ele.label = 'Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.onChangeActionName = 'showRelevantFields';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = 'TextDataType,Text;IntegralDataType,Integer;DecimalDataType,Decimal;DateDataType,Date;BooleanDataType,Boolean';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable__type';
ele.tableName = 'editingTable';
ele.unqualifiedName = '_type';
ele.label = 'Type';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_description';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'description';
ele.label = 'Description';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.isRequired = true;
ele.listServiceId = 'messages';
ele.noAutoLoad = true;
ele.minCharsToTriggerService = 1;
ele.sameListForAllRows = true;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_messageName';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'messageName';
ele.label = 'Message Name';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'TextDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_minLength';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'minLength';
ele.label = 'Min length';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'TextDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.fromField = 'editingTable_minLength';
ele.name = 'editingTable_maxLength';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'maxLength';
ele.label = 'Max length';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_regex';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'regex';
ele.label = 'Regex';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.onUserChangeActionName = 'setAllowNegative';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.validationFunction = 'validateMinMaxValue';
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_minValue';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'minValue';
ele.label = 'Min value';
ele.value = '';
P2.addField(ele);
ele = new PM.HiddenField();
ele.dataType = 'text';
ele.name = 'editingTable_allowNegativeValue';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'allowNegativeValue';
ele.label = '';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.validationFunction = 'validateMinMaxValue';
ele.suggestAfterMinChars = 1;
ele.fromField = 'editingTable_minValue';
ele.name = 'editingTable_maxValue';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'maxValue';
ele.label = 'Max value';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'DecimalDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_numberOfDecimals';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'numberOfDecimals';
ele.label = 'Nbr fracitonal digits';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'DateDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_maxDaysBeforeToday';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'maxDaysBeforeToday';
ele.label = 'Max days into past';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'DateDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_maxDaysAfterToday';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'maxDaysAfterToday';
ele.label = 'Max days into future';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.valueList = '0,No;1,Yes';
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.name = 'editingTable_includesTime';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'includesTime';
ele.label = 'Includes time?';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'BooleanDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_trueValue';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'trueValue';
ele.label = 'Text when true';
ele.value = '';
P2.addField(ele);
ele = new PM.AssistedInputField();
ele.basedOnFieldValue = 'BooleanDataType';
ele.dataType = 'text';
ele.minCharsToTriggerService = 1;
ele.isValid = true;
ele.codePickerLeft = -1;
ele.codePickerTop = -1;
ele.suggestAfterMinChars = 1;
ele.basedOnField = 'editingTable__type';
ele.name = 'editingTable_falseValue';
ele.tableName = 'editingTable';
ele.unqualifiedName = 'falseValue';
ele.label = 'Text when false';
ele.value = '';
P2.addField(ele);
/***** action field = checkForPageParameters  ********/
ele = new PM.LocalAction();
ele.name = 'checkForPageParameters';
ele.functionName = 'checkForPageParameters';
P2.addAction(ele);
/***** action field = getFiles  ********/
ele = new PM.ServerAction();
ele.name = 'getFiles';
ele.serviceId = 'ide.getFiles';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.queryFieldNames = [ 'resourceType'];
ele.closeWindow = true;
ele.queryFieldSources = [ 'resourceType'];
P2.addAction(ele);
/***** action field = getMessages  ********/
ele = new PM.ServerAction();
ele.name = 'getMessages';
ele.serviceId = 'ide.getMessages';
ele.callBackActionName = 'assignMessages';
ele.toRefreshPage = 'afterMyAction';
ele.closeWindow = true;
P2.addAction(ele);
/***** action field = assignMessages  ********/
ele = new PM.LocalAction();
ele.name = 'assignMessages';
ele.functionName = 'assignMessages';
P2.addAction(ele);
/***** action field = getDataTypes  ********/
ele = new PM.ServerAction();
ele.name = 'getDataTypes';
ele.serviceId = 'ide.getDataTypes';
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.queryFieldNames = [ 'fileName'];
ele.closeWindow = true;
ele.queryFieldSources = [ 'fileName'];
P2.addAction(ele);
/***** action field = doSave  ********/
ele = new PM.ServerAction();
ele.name = 'doSave';
ele.serviceId = 'ide.saveDataTypes';
ele.submitForm = true;
ele.toRefreshPage = 'beforeMyAction';
ele.disableForm = true;
ele.resetFormModifiedState = true;
ele.closeWindow = true;
P2.addAction(ele);
/***** action field = showRelevantFields  ********/
ele = new PM.LocalAction();
ele.name = 'showRelevantFields';
ele.functionName = 'showRelevantFields';
P2.addAction(ele);
/***** action field = setAllowNegative  ********/
ele = new PM.LocalAction();
ele.name = 'setAllowNegative';
ele.functionName = 'setAllowNegative';
P2.addAction(ele);
/***** action field = showText  ********/
ele = new PM.DummyAction();
ele.name = 'showText';
ele.showPanels = [ 'textFields'];
ele.hidePanels = [ 'numberFields','dateFields','booleanFields'];
P2.addAction(ele);
/***** action field = showNumber  ********/
ele = new PM.DummyAction();
ele.name = 'showNumber';
ele.showPanels = [ 'numberFields'];
ele.hidePanels = [ 'textFields','dateFields','booleanFields'];
P2.addAction(ele);
/***** action field = showDate  ********/
ele = new PM.DummyAction();
ele.name = 'showDate';
ele.showPanels = [ 'dateFields'];
ele.hidePanels = [ 'textFields','numberFields','booleanFields'];
P2.addAction(ele);
/***** action field = showBoolean  ********/
ele = new PM.DummyAction();
ele.name = 'showBoolean';
ele.showPanels = [ 'booleanFields'];
ele.hidePanels = [ 'textFields','numberFields','dateFields'];
P2.addAction(ele);
/***** action field = hideAll  ********/
ele = new PM.DummyAction();
ele.name = 'hideAll';
ele.hidePanels = [ 'textFields','numberFields','dateFields','booleanFields'];
P2.addAction(ele);
/***** action field = rowClicked  ********/
ele = new PM.LocalAction();
ele.name = 'rowClicked';
ele.functionName = 'rowClicked';
P2.addAction(ele);
/***** action field = enableName  ********/
ele = new PM.DummyAction();
ele.name = 'enableName';
ele.enableFields = [ 'editingTable_name'];
P2.addAction(ele);
/***** action field = disableName  ********/
ele = new PM.DummyAction();
ele.name = 'disableName';
ele.disableFields = [ 'editingTable_name'];
P2.addAction(ele);
/***** action field = close  ********/
ele = new PM.CloseAction();
ele.name = 'close';
ele.warnIfFormIsModified = true;
P2.addAction(ele);
/***** action field = reload  ********/
ele = new PM.ResetAction();
ele.name = 'reload';
ele.warnIfFormIsModified = true;
P2.addAction(ele);