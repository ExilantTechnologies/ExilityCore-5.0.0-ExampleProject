<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    <meta http-equiv="Cache-Control" content="no-cache" />
    <link rel="stylesheet" href="../../css/home/ezDefault.css" type="text/css" />
    <script type="text/javascript" src="../../js/api/exilityLoader.js"></script>
    
<script type="text/javascript" src="sql.metadata.js" ></script> 
<script type="text/javascript" src="../../js/ide/sql.js" ></script> 
<link rel="stylesheet" type="text/css" href="../../css/ide/sql.css" />
</head>
<body onload="exilPageLoad();" style="display: none;" onunload="exilPageUnload();"
    onscroll="adjustFrameHeightToBodyHeight();">
    <form id="form1" onsubmit="if(event.preventDefault) event.preventDefault(); else event.returnValue= false; return false;" action="" accept-charset="UTF-8">
    <div class="page">
        <div id="pageTitle">Sql Template</div>
        <div class="expandedfieldset" id="topButtonsTop" >
<div id="topButtons" class="topButtons" >
<input type="image"  class="imagebutton"  src="../../images/saveIcon.png" id="save" title="Save" onclick="P2.act(this, 'save', 'save', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/reloadIcon.png" id="reload" title="Reload" onclick="P2.act(this, 'reload', 'reload', event);" style="cursor:pointer;" />
<input type="image"  class="imagebutton"  src="../../images/closeIcon.png" id="close" title="Close" onclick="P2.act(this, 'close', 'close', event);" style="cursor:pointer;" /></div></div><div class="expandedfieldset" id="selectionTop" >
<div class="displayPanel" id="selection" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="selectionFieldsTable" >
<col id="selectionCol1" /><col id="selectionCol2" /><col id="selectionCol3" /><col id="selectionCol4" /><col id="selectionCol5" /><col id="selectionCol6" /><col id="selectionCol7" /><col id="selectionCol8" /><tr> <td colspan="2" ><div class="expandedfieldset" id="searchPanelTop" >
<div class="displayPanel" id="searchPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="searchPanelFieldsTable" >
<col id="searchPanelCol1" /><col id="searchPanelCol2" /><col id="searchPanelCol3" /><col id="searchPanelCol4" /><tr>
<td class="labelCell" id="folderNameLabelCell" ><div class="requiredLabel" id="folderNameLabel"  >Folder Name</div></td><td class="fieldCell" id="folderNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000" style="width:250px;" id="folderName"  onchange="P2.fieldChanged(this, 'folderName');" onfocus="P2.fieldFocussed(this, 'folderName');" onblur="P2.inputFocusOut(this, 'folderName');" autocomplete="off" /></td>
<td class="labelCell" id="fileNameLabelCell" ><div class="requiredLabel" id="fileNameLabel"  >Sql Name</div></td><td class="fieldCell" id="fileNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000" style="width:250px;" id="fileName"  onchange="P2.fieldChanged(this, 'fileName');" onfocus="P2.fieldFocussed(this, 'fileName');" onblur="P2.inputFocusOut(this, 'fileName');" autocomplete="off" />&nbsp;
<input type="hidden"  id="resourceType"  onchange="P2.fieldChanged(this, 'resourceType');"value="sql" /></td></tr> </table>  </div></div></td> <td colspan="2" ><div class="expandedfieldset" id="btnPanelTop" >
<div class="displayPanel" id="btnPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="btnPanelFieldsTable" >
<col id="btnPanelCol1" /><col id="btnPanelCol2" /><col id="btnPanelCol3" /><col id="btnPanelCol4" /><tr> <td colspan="2" >
<input type="button" value="New Sql" id="new" onclick="P2.act(this, 'new', 'newSql', event);" style="cursor:pointer;" /></td> <td colspan="2" >
<input type="button" value="Delete this Sql" id="delete" onclick="P2.act(this, 'delete', 'delete', event);" style="cursor:pointer;" /></td></tr> </table>  </div></div></td><td colspan="2">&nbsp;</td></tr> </table>  </div></div><div class="expandedfieldset" id="sqlDetailsTop" >
<div class="tabpanel" id="sqlDetails"  >
 <div class="tabnav" id="sqlDetailsTabNav" ><div id="sqlAttributesTab"  class="activetablabel"  tabcontainername="sqlDetails" onclick="P2.tabClicked(this, 'sqlAttributesTabsDiv', 'sqlDetails');"  >Attributes</div><div id="inputParamsTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="sqlDetails" onclick="P2.tabClicked(this, 'inputParamsTabsDiv', 'sqlDetails');"  >Input Params</div><div id="outputParamsTab"  class="passivetablabel" clickdisabled="true"  tabcontainername="sqlDetails" onclick="P2.tabClicked(this, 'outputParamsTabsDiv', 'sqlDetails');"  >Output Parameters</div></div><div class="tabs" id = "sqlDetailsTabs"><div id="sqlAttributesTabsDiv"><div class="expandedfieldset" id="sqlAttributesTop" >
<div class="displayPanel" id="sqlAttributes" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="sqlAttributesFieldsTable" >
<col id="sqlAttributesCol1" /><col id="sqlAttributesCol2" /><col id="sqlAttributesCol3" /><col id="sqlAttributesCol4" /><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="50"  maxlength="3000"  id="name"  onchange="P2.fieldChanged(this, 'name');" onfocus="P2.fieldFocussed(this, 'name');" onblur="P2.inputFocusOut(this, 'name');" autocomplete="off" />&nbsp;
<input type="hidden"  id="module"  onchange="P2.fieldChanged(this, 'module');"/></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="label" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="150"  maxlength="3000"  id="description"  onchange="P2.fieldChanged(this, 'description');"/></td></tr><tr>
<td class="labelCell" id="sqlTypeLabelCell" ><div class="requiredLabel" id="sqlTypeLabel"  >SQL Data Type</div></td><td class="fieldCell" id="sqlTypeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="sqlType"  onchange="P2.fieldChanged(this, 'sqlType');" onfocus="P2.fieldFocussed(this, 'sqlType');" onblur="P2.inputFocusOut(this, 'sqlType');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Original design was only for dynamic sql. It is now extended stored procedures and prepared statements.</div></td></tr><tr>
<td class="labelCell" id="toBeExecutedLabelCell" ><div class="label" id="toBeExecutedLabel"  >Data Extracted?</div></td><td class="fieldCell" id="toBeExecutedFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="toBeExecuted"  onchange="P2.fieldChanged(this, 'toBeExecuted');" onfocus="P2.fieldFocussed(this, 'toBeExecuted');" onblur="P2.inputFocusOut(this, 'toBeExecuted');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Is this SQl/stored procedure expected to return data, or is it just expected to manipulate data (DML).                           If you say yes, Exility runs this sql and extracts data from the result.                           If you say no, Exility executes this sql and returns number of rows affected.                          This meaning applies to stored proecure as well.                           Also, note that jdbc expects you to use SET NOCOUNT ON in your pl/sql if you have more than one sqls inside that.</div></td></tr><tr>
<td class="labelCell" id="storedProcedureNameLabelCell" ><div class="label" id="storedProcedureNameLabel"  >Stored prodedure name</div></td><td class="fieldCell" id="storedProcedureNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="storedProcedureName"  onchange="P2.fieldChanged(this, 'storedProcedureName');"/></td> <td colspan="2" ><div id="commentOnSp" class="note" >Name of stored procedure. Provide only the name.                           We will use input and output parameters in the other tab to invoke the stored procedure with the right parameters.                          We do not provide syntax to define in-out paramaters.</div></td></tr><tr> <td colspan="4" ><div id="commentOnSql" class="note" >We recommend that you develop the SQL using the development tool provided by your RDBMS, like SQL developer.                          Ensure that it is properly formatted. Copy-paste that here and replace constancts with @1 etc..                           Rememeber to provide {} around parameters that are optional.</div></td></tr><tr>
<td class="mergedCell" id="sqlMergedCell" colspan="4">&nbsp;
<textarea  id="sql"  onchange="P2.fieldChanged(this, 'sql');"cols="118" rows="20"  maxLength="3000" ></textarea></td></tr> </table>  </div></div></div><div id="inputParamsTabsDiv" style="display:none;"><div class="expandedfieldset" id="inputParamsTop" >
<div class="displayPanel" id="inputParams" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="inputParamsFieldsTable" >
<col id="inputParamsCol1" /><col id="inputParamsCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="minParamsAeaTop" >
<div class="displayPanel" id="minParamsAea" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="minParamsAeaFieldsTable" >
<col id="minParamsAeaCol1" /><col id="minParamsAeaCol2" /><col id="minParamsAeaCol3" /><col id="minParamsAeaCol4" /><tr>
<td class="labelCell" id="minParametersLabelCell" ><div class="label" id="minParametersLabel"  >Min parameters</div></td><td class="fieldCell" id="minParametersFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="2"  maxlength="3000"  id="minParameters"  onchange="P2.fieldChanged(this, 'minParameters');" onfocus="P2.fieldFocussed(this, 'minParameters');" onblur="P2.inputFocusOut(this, 'minParameters');" autocomplete="off" /></td> <td colspan="2" ><div class="notes" >Of the total input parameters you have defined, does your design require a minimum number of parameters to have values at run time?</div></td></tr><tr> <td colspan="4" ><div class="note" >Provide name of fields in which value is expected for all variables you have used in yor sql.                               Ensure that the parameters are in the right order. That is first parameter should correspond to @1 etc..                               If this is a stored procedure, then specify the input parameters for the stored procedure here.                              Use output tab for specifying out params.</div></td></tr> </table>  </div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="inLeftAndRightTop" >
<div class="displayPanel" id="inLeftAndRight" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="inLeftAndRightFieldsTable" >
<col id="inLeftAndRightCol1" /><col id="inLeftAndRightCol2" /><col id="inLeftAndRightCol3" /><col id="inLeftAndRightCol4" /><tr> <td colspan="2" ><div class="expandedfieldset" id="inParmsTop" >
<div id="inParms" class="listPanel" >
<table id="inputParameters" class="gridtable"  border="1" ><col id="inputParametersCol1"  /><thead><tr ><th align="left" id="inputParameters_nameLabel" ><div>&nbsp;Name</div></th></tr></thead><tbody ><tr onclick="P2.listClicked(this, 'inputParameters', event);" title="click to edit this parameter"  class="gridrow" ><td align="left"><div class="field"  id="inputParameters_name" >&nbsp;</div>
<input type="hidden"  id="inputParameters__type"  onchange="P2.fieldChanged(this, 'inputParameters__type');" onkeydown="P2.handleGridNav(this, 'inputParameters__type', event);" onfocus="P2.fieldFocussed(this, 'inputParameters__type');"value="SqlParameter" />
<input type="hidden"  id="inputParameters_description"  onchange="P2.fieldChanged(this, 'inputParameters_description');" onkeydown="P2.handleGridNav(this, 'inputParameters_description', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_description');"/>
<input type="hidden"  id="inputParameters_label"  onchange="P2.fieldChanged(this, 'inputParameters_label');" onkeydown="P2.handleGridNav(this, 'inputParameters_label', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_label');"/>
<input type="hidden"  id="inputParameters_isOptional"  onchange="P2.fieldChanged(this, 'inputParameters_isOptional');" onkeydown="P2.handleGridNav(this, 'inputParameters_isOptional', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_isOptional');"/>
<input type="hidden"  id="inputParameters_defaultValue"  onchange="P2.fieldChanged(this, 'inputParameters_defaultValue');" onkeydown="P2.handleGridNav(this, 'inputParameters_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_defaultValue');"/>
<input type="hidden"  id="inputParameters_dataElementName"  onchange="P2.fieldChanged(this, 'inputParameters_dataElementName');" onkeydown="P2.handleGridNav(this, 'inputParameters_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_dataElementName');"/>
<input type="hidden"  id="inputParameters_parameterType"  onchange="P2.fieldChanged(this, 'inputParameters_parameterType');" onkeydown="P2.handleGridNav(this, 'inputParameters_parameterType', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_parameterType');"/>
<input type="hidden"  id="inputParameters_index"  onchange="P2.fieldChanged(this, 'inputParameters_index');" onkeydown="P2.handleGridNav(this, 'inputParameters_index', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_index');"/>
<input type="hidden"  id="inputParameters_toUpper"  onchange="P2.fieldChanged(this, 'inputParameters_toUpper');" onkeydown="P2.handleGridNav(this, 'inputParameters_toUpper', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_toUpper');"/>
<input type="hidden"  id="inputParameters_gridName"  onchange="P2.fieldChanged(this, 'inputParameters_gridName');" onkeydown="P2.handleGridNav(this, 'inputParameters_gridName', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_gridName');"/>
<input type="hidden"  id="inputParameters_basedOnColumnName"  onchange="P2.fieldChanged(this, 'inputParameters_basedOnColumnName');" onkeydown="P2.handleGridNav(this, 'inputParameters_basedOnColumnName', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_basedOnColumnName');"/>
<input type="hidden"  id="inputParameters_doNotFormat"  onchange="P2.fieldChanged(this, 'inputParameters_doNotFormat');" onkeydown="P2.handleGridNav(this, 'inputParameters_doNotFormat', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_doNotFormat');"/>
<input type="hidden"  id="inputParameters_justLeaveMeAlone"  onchange="P2.fieldChanged(this, 'inputParameters_justLeaveMeAlone');" onkeydown="P2.handleGridNav(this, 'inputParameters_justLeaveMeAlone', event);" onfocus="P2.fieldFocussed(this, 'inputParameters_justLeaveMeAlone');"/></td></tr></tbody></table></div></div></td> <td colspan="2" ><div class="expandedfieldset" id="inParmsRightPanelTop" >
<div class="displayPanel" id="inParmsRightPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="inParmsRightPanelFieldsTable" >
<col id="inParmsRightPanelCol1" /><col id="inParmsRightPanelCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="inputNavigaitonsTop" >
<div class="buttonpanel" id="inputNavigaitons" >
<input type="button"  class="button" value="First" id="inputParametersMoveFirst"  />
<input type="button"  class="button" value="Prev" id="inputParametersMovePrev"  />
<input type="button"  class="button" value="Next" id="inputParametersMoveNext"  />
<input type="button"  class="button" value="Last" id="inputParametersMoveLast"  />
<input type="button"  class="button" value="New Data Type" id="inputParametersNewRow"  />
<input type="button"  class="button" value="Delete This Data Type" id="inputParametersDeleteRow"  /></div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="inputEditPanelTop" >
<div class="displayPanel" id="inputEditPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="inputEdits" >
<col id="inputEditPanelCol1" /><col id="inputEditPanelCol2" /><col id="inputEditPanelCol3" /><col id="inputEditPanelCol4" /><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_name"  onchange="P2.fieldChanged(this, 'inputEdits_name');" onkeydown="P2.handleGridNav(this, 'inputEdits_name', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_name');" onblur="P2.inputFocusOut(this, 'inputEdits_name');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Name of the field in which value is supplied for this paremeter in dc or grid.</div></td></tr><tr>
<td class="labelCell" id="parameterTypeLabelCell" ><div class="requiredLabel" id="parameterTypeLabel"  >Parameter type</div></td><td class="fieldCell" id="parameterTypeFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_parameterType"  onchange="P2.fieldChanged(this, 'inputEdits_parameterType');" onkeydown="P2.handleGridNav(this, 'inputEdits_parameterType', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_parameterType');" onblur="P2.inputFocusOut(this, 'inputEdits_parameterType');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >normal - @1 is replaced with the value found in this field in dc, formatted properly for a sql.                                         list   - @1 is replaced with a comma separated values in the list, so that you can use it in a sql like IN (...).                                         filter - @1 is repalced with a condition like name like 'abcd%'. This is normally used in conjunction with a client side filterField.                                         combined- similar to filter, but teh value of teh field itself has the comparison operator. e.g. '> 20'. Not used anymore.                                         </div></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="label" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="150"  maxlength="3000"  id="inputEdits_description"  onchange="P2.fieldChanged(this, 'inputEdits_description');" onkeydown="P2.handleGridNav(this, 'inputEdits_description', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_description');" onblur="P2.inputFocusOut(this, 'inputEdits_description');" autocomplete="off" /></td></tr><tr>
<td class="labelCell" id="isOptionalLabelCell" ><div class="requiredLabel" id="isOptionalLabel"  >Can value be omitted?</div></td><td class="fieldCell" id="isOptionalFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_isOptional"  onchange="P2.fieldChanged(this, 'inputEdits_isOptional');" onkeydown="P2.handleGridNav(this, 'inputEdits_isOptional', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_isOptional');" onblur="P2.inputFocusOut(this, 'inputEdits_isOptional');" autocomplete="off" /></td> <td colspan="2" ><div class="text" >Remember to put braces around @1 if 1st parameter is optional, and not do it if it is mandatory.</div></td></tr><tr>
<td class="labelCell" id="defaultValueLabelCell" ><div class="label" id="defaultValueLabel"  >Default Value</div></td><td class="fieldCell" id="defaultValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_defaultValue"  onchange="P2.fieldChanged(this, 'inputEdits_defaultValue');" onkeydown="P2.handleGridNav(this, 'inputEdits_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_defaultValue');" onblur="P2.inputFocusOut(this, 'inputEdits_defaultValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If value is not found at run time, this value is used. Note that if you use default value, it does not make sense to mark this as optional, because you will end up having value always, and you would have put a pair of braces around this @x which will always be removed.</div></td></tr><tr>
<td class="labelCell" id="dataElementNameLabelCell" ><div class="label" id="dataElementNameLabel"  >Data Element Name</div></td><td class="fieldCell" id="dataElementNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_dataElementName"  onchange="P2.fieldChanged(this, 'inputEdits_dataElementName');" onkeydown="P2.handleGridNav(this, 'inputEdits_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_dataElementName');" onblur="P2.inputFocusOut(this, 'inputEdits_dataElementName');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If the parameter name is not put into dictionary, use a dataElement that best fits this parameter. Not recommended. We encourage you to add every name that you use into dictionary.</div></td></tr><tr>
<td class="labelCell" id="gridNameLabelCell" ><div class="label" id="gridNameLabel"  >Grid name</div></td><td class="fieldCell" id="gridNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_gridName"  onchange="P2.fieldChanged(this, 'inputEdits_gridName');" onkeydown="P2.handleGridNav(this, 'inputEdits_gridName', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_gridName');" onblur="P2.inputFocusOut(this, 'inputEdits_gridName');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If this parameter is inside a grid, specify the grid name. If the parameter is list, then we use the correspondiing column. If it is a normal field, then you have to specify the row index (0 based) as well.</div></td></tr><tr>
<td class="labelCell" id="indexLabelCell" ><div class="label" id="indexLabel"  >Row number</div></td><td class="fieldCell" id="indexFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_index"  onchange="P2.fieldChanged(this, 'inputEdits_index');" onkeydown="P2.handleGridNav(this, 'inputEdits_index', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_index');" onblur="P2.inputFocusOut(this, 'inputEdits_index');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If grid name is used for a non-list parameter, then we need to know the row number from which to take the value. Generally, it woudl be 0, as you would use this feature only if the grid is likley to have one and only one row.</div></td></tr><tr>
<td class="labelCell" id="toUpperLabelCell" ><div class="label" id="toUpperLabel"  >Convert to UPPER CASE</div></td><td class="fieldCell" id="toUpperFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_toUpper"  onchange="P2.fieldChanged(this, 'inputEdits_toUpper');" onkeydown="P2.handleGridNav(this, 'inputEdits_toUpper', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_toUpper');" onblur="P2.inputFocusOut(this, 'inputEdits_toUpper');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If you want to use the upper cased value always. I haev seen most users using Sql command instead. It is definitely a better idea to use this feature, than burdening db server.</div></td></tr><tr>
<td class="labelCell" id="basedOnColumnNameLabelCell" ><div class="label" id="basedOnColumnNameLabel"  >Filter column name</div></td><td class="fieldCell" id="basedOnColumnNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_basedOnColumnName"  onchange="P2.fieldChanged(this, 'inputEdits_basedOnColumnName');" onkeydown="P2.handleGridNav(this, 'inputEdits_basedOnColumnName', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_basedOnColumnName');" onblur="P2.inputFocusOut(this, 'inputEdits_basedOnColumnName');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Very advanced concept. Relevant if you are using list from a grid. And you do not want all the values in the column. If you want to select values in this column, only if value of another column matches a value, use this and next field.</div></td></tr><tr>
<td class="labelCell" id="basedOnColumnValueLabelCell" ><div class="label" id="basedOnColumnValueLabel"  >Value to match</div></td><td class="fieldCell" id="basedOnColumnValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_basedOnColumnValue"  onchange="P2.fieldChanged(this, 'inputEdits_basedOnColumnValue');" onkeydown="P2.handleGridNav(this, 'inputEdits_basedOnColumnValue', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_basedOnColumnValue');" onblur="P2.inputFocusOut(this, 'inputEdits_basedOnColumnValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >basedOnColumn should have this value for the row to be used. Else the row is dropped while preparing list of values of this parameter.</div></td></tr><tr>
<td class="labelCell" id="doNotFormatLabelCell" ><div class="label" id="doNotFormatLabel"  >Format for SQL</div></td><td class="fieldCell" id="doNotFormatFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_doNotFormat"  onchange="P2.fieldChanged(this, 'inputEdits_doNotFormat');" onkeydown="P2.handleGridNav(this, 'inputEdits_doNotFormat', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_doNotFormat');" onblur="P2.inputFocusOut(this, 'inputEdits_doNotFormat');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Text fields are put inside a pair of single quotes etc. You can avoid it with this option. NOTE that single quotes are still escaped with anotehr single quote inside text fields.</div></td></tr><tr>
<td class="labelCell" id="justLeaveMeAloneLabelCell" ><div class="label" id="justLeaveMeAloneLabel"  >Escape single quotes</div></td><td class="fieldCell" id="justLeaveMeAloneFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="inputEdits_justLeaveMeAlone"  onchange="P2.fieldChanged(this, 'inputEdits_justLeaveMeAlone');" onkeydown="P2.handleGridNav(this, 'inputEdits_justLeaveMeAlone', event);" onfocus="P2.fieldFocussed(this, 'inputEdits_justLeaveMeAlone');" onblur="P2.inputFocusOut(this, 'inputEdits_justLeaveMeAlone');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Some projects do some formatting on the client and send it to server. In such case, it may have single quotes that should not be escaped. Use this option to leave the value as it is with no change whatsoever.</div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></div><div id="outputParamsTabsDiv" style="display:none;"><div class="expandedfieldset" id="outputParamsTop" >
<div class="displayPanel" id="outputParams" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="outputParamsFieldsTable" >
<col id="outputParamsCol1" /><col id="outputParamsCol2" /><col id="outputParamsCol3" /><col id="outputParamsCol4" /><tr> <td colspan="4" ><div class="notes" >We recommend that your sql extracts data with right column name. Exility will pick-up these from meta data, and automatically add output parameters. Specify output parameters</div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="outParmsTop" >
<div id="outParms" class="listPanel" >
<table id="outputParameters" class="gridtable"  border="1" ><col id="outputParametersCol1"  /><thead><tr ><th align="left" id="outputParameters_nameLabel" ><div>&nbsp;Name</div></th></tr></thead><tbody ><tr onclick="P2.listClicked(this, 'outputParameters', event);" title="click to edit this parameter"  class="gridrow" ><td align="left"><div class="field"  id="outputParameters_name" >&nbsp;</div>
<input type="hidden"  id="outputParameters__type"  onchange="P2.fieldChanged(this, 'outputParameters__type');" onkeydown="P2.handleGridNav(this, 'outputParameters__type', event);" onfocus="P2.fieldFocussed(this, 'outputParameters__type');"value="Parameter" />
<input type="hidden"  id="outputParameters_description"  onchange="P2.fieldChanged(this, 'outputParameters_description');" onkeydown="P2.handleGridNav(this, 'outputParameters_description', event);" onfocus="P2.fieldFocussed(this, 'outputParameters_description');"/>
<input type="hidden"  id="outputParameters_label"  onchange="P2.fieldChanged(this, 'outputParameters_label');" onkeydown="P2.handleGridNav(this, 'outputParameters_label', event);" onfocus="P2.fieldFocussed(this, 'outputParameters_label');"/>
<input type="hidden"  id="outputParameters_defaultValue"  onchange="P2.fieldChanged(this, 'outputParameters_defaultValue');" onkeydown="P2.handleGridNav(this, 'outputParameters_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'outputParameters_defaultValue');"/>
<input type="hidden"  id="outputParameters_dataElementName"  onchange="P2.fieldChanged(this, 'outputParameters_dataElementName');" onkeydown="P2.handleGridNav(this, 'outputParameters_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'outputParameters_dataElementName');"/></td></tr></tbody></table></div></div></td> <td colspan="2" ><div class="expandedfieldset" id="inputParameterDetailsTop" >
<div class="displayPanel" id="inputParameterDetails" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="inputParameterDetailsFieldsTable" >
<col id="inputParameterDetailsCol1" /><col id="inputParameterDetailsCol2" /><tr> <td colspan="2" ><div class="expandedfieldset" id="outputNavigaitonsTop" >
<div class="buttonpanel" id="outputNavigaitons" >
<input type="button"  class="button" value="First" id="outputParametersMoveFirst"  />
<input type="button"  class="button" value="Prev" id="outputParametersMovePrev"  />
<input type="button"  class="button" value="Next" id="outputParametersMoveNext"  />
<input type="button"  class="button" value="Last" id="outputParametersMoveLast"  />
<input type="button"  class="button" value="New Parameter" id="outputParametersNewRow"  />
<input type="button"  class="button" value="Delete This Parameter" id="outputParametersDeleteRow"  /></div></div></td></tr><tr> <td colspan="2" ><div class="expandedfieldset" id="outputEditPanelTop" >
<div class="displayPanel" id="outputEditPanel" >  <table cellpadding="0" cellspacing="0" class="fieldsTable"  id="outputEdits" >
<col id="outputEditPanelCol1" /><col id="outputEditPanelCol2" /><col id="outputEditPanelCol3" /><col id="outputEditPanelCol4" /><tr>
<td class="labelCell" id="nameLabelCell" ><div class="requiredLabel" id="nameLabel"  >Name</div></td><td class="fieldCell" id="nameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="outputEdits_name"  onchange="P2.fieldChanged(this, 'outputEdits_name');" onkeydown="P2.handleGridNav(this, 'outputEdits_name', event);" onfocus="P2.fieldFocussed(this, 'outputEdits_name');" onblur="P2.inputFocusOut(this, 'outputEdits_name');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Name of the field/column that is used to put this value in data collection.</div></td></tr><tr>
<td class="labelCell" id="labelLabelCell" ><div class="label" id="labelLabel"  >Label</div></td><td class="fieldCell" id="labelFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="outputEdits_label"  onchange="P2.fieldChanged(this, 'outputEdits_label');" onkeydown="P2.handleGridNav(this, 'outputEdits_label', event);" onfocus="P2.fieldFocussed(this, 'outputEdits_label');" onblur="P2.inputFocusOut(this, 'outputEdits_label');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >Label is used while generating UI components to render this field (for testing etc..).</div></td></tr><tr>
<td class="labelCell" id="descriptionLabelCell" ><div class="label" id="descriptionLabel"  >Description</div></td><td class="fieldCell" id="descriptionFieldCell"  colspan="3" >
<input type="text" autocomplete="off" class="inputfield"  size="120"  maxlength="3000"  id="outputEdits_description"  onchange="P2.fieldChanged(this, 'outputEdits_description');" onkeydown="P2.handleGridNav(this, 'outputEdits_description', event);" onfocus="P2.fieldFocussed(this, 'outputEdits_description');" onblur="P2.inputFocusOut(this, 'outputEdits_description');" autocomplete="off" /></td></tr><tr>
<td class="labelCell" id="defaultValueLabelCell" ><div class="label" id="defaultValueLabel"  >Default Value</div></td><td class="fieldCell" id="defaultValueFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="outputEdits_defaultValue"  onchange="P2.fieldChanged(this, 'outputEdits_defaultValue');" onkeydown="P2.handleGridNav(this, 'outputEdits_defaultValue', event);" onfocus="P2.fieldFocussed(this, 'outputEdits_defaultValue');" onblur="P2.inputFocusOut(this, 'outputEdits_defaultValue');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >if sql does not return a value, this default value is used as output</div></td></tr><tr>
<td class="labelCell" id="dataElementNameLabelCell" ><div class="label" id="dataElementNameLabel"  >Data Element Name</div></td><td class="fieldCell" id="dataElementNameFieldCell" >
<input type="text" autocomplete="off" class="inputfield"  size="20"  maxlength="3000"  id="outputEdits_dataElementName"  onchange="P2.fieldChanged(this, 'outputEdits_dataElementName');" onkeydown="P2.handleGridNav(this, 'outputEdits_dataElementName', event);" onfocus="P2.fieldFocussed(this, 'outputEdits_dataElementName');" onblur="P2.inputFocusOut(this, 'outputEdits_dataElementName');" autocomplete="off" /></td> <td colspan="2" ><div class="note" >If the parameter name is not put into dictionary, use a dataElement that best fits this parameter. Not recommended. We encourage you to add every name that you use into dictionary.</div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></td></tr> </table>  </div></div></div></div></div></div>
    </div>
    </form>
</body>
</html>  